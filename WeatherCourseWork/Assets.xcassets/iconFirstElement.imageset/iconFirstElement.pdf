%PDF-1.7

1 0 obj
  << /Length 2 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.964706 exch 0.588235 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.259967 mul 1.000000 add exch dup 0.000000 sub -0.181189 mul 0.964706 add exch dup 0.000000 sub 0.212701 mul 0.588235 add exch } if dup 0.497800 gt { exch pop exch pop exch pop dup 0.497800 sub -0.288925 mul 0.870588 add exch dup 0.497800 sub -0.210837 mul 0.874510 add exch dup 0.497800 sub 0.242072 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.725490 exch 0.768627 exch 0.815686 exch } if pop }
endstream
endobj

2 0 obj
  534
endobj

3 0 obj
  << /Length 4 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.976471 exch 0.733333 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.259967 mul 1.000000 add exch dup 0.000000 sub -0.196945 mul 0.976471 add exch dup 0.000000 sub 0.078778 mul 0.733333 add exch } if dup 0.497800 gt { exch pop exch pop exch pop dup 0.497800 sub -0.288925 mul 0.870588 add exch dup 0.497800 sub -0.218646 mul 0.878431 add exch dup 0.497800 sub 0.085897 mul 0.772549 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.725490 exch 0.768627 exch 0.815686 exch } if pop }
endstream
endobj

4 0 obj
  534
endobj

5 0 obj
  << /Length 6 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.945098 exch 0.000000 exch dup 0.005650 gt { exch pop exch pop exch pop dup 0.005650 sub 0.000000 mul 1.000000 add exch dup 0.005650 sub 0.045989 mul 0.945098 add exch dup 0.005650 sub 0.505883 mul 0.000000 add exch } if dup 0.090921 gt { exch pop exch pop exch pop dup 0.090921 sub 0.000000 mul 1.000000 add exch dup 0.090921 sub 0.026429 mul 0.949020 add exch dup 0.090921 sub 0.740024 mul 0.043137 add exch } if dup 0.239300 gt { exch pop exch pop exch pop dup 0.239300 sub 0.000000 mul 1.000000 add exch dup 0.239300 sub 0.060737 mul 0.952941 add exch dup 0.239300 sub 0.951542 mul 0.152941 add exch } if dup 0.433000 gt { exch pop exch pop exch pop dup 0.433000 sub 0.000000 mul 1.000000 add exch dup 0.433000 sub 0.050776 mul 0.964706 add exch dup 0.433000 sub 1.083213 mul 0.337255 add exch } if dup 0.664700 gt { exch pop exch pop exch pop dup 0.664700 sub 0.000000 mul 1.000000 add exch dup 0.664700 sub 0.075155 mul 0.976471 add exch dup 0.664700 sub 1.217505 mul 0.588235 add exch } if dup 0.925600 gt { exch pop exch pop exch pop dup 0.925600 sub 0.000000 mul 1.000000 add exch dup 0.925600 sub 0.052709 mul 0.996078 add exch dup 0.925600 sub 1.265022 mul 0.905882 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 1.000000 exch 1.000000 exch } if pop }
endstream
endobj

6 0 obj
  1306
endobj

7 0 obj
  << /Length 8 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.925490 exch 0.835294 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 1.000000 add exch dup 0.000000 sub -0.006800 mul 0.925490 add exch dup 0.000000 sub -0.013600 mul 0.835294 add exch } if dup 0.576700 gt { exch pop exch pop exch pop dup 0.576700 sub 0.000000 mul 1.000000 add exch dup 0.576700 sub -0.056643 mul 0.921569 add exch dup 0.576700 sub -0.132166 mul 0.827451 add exch } if dup 0.784400 gt { exch pop exch pop exch pop dup 0.784400 sub 0.000000 mul 1.000000 add exch dup 0.784400 sub -0.106276 mul 0.909804 add exch dup 0.784400 sub -0.292258 mul 0.800000 add exch } if dup 0.932000 gt { exch pop exch pop exch pop dup 0.932000 sub 0.000000 mul 1.000000 add exch dup 0.932000 sub -0.230680 mul 0.894118 add exch dup 0.932000 sub -0.519031 mul 0.756863 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.878431 exch 0.721569 exch } if pop }
endstream
endobj

8 0 obj
  926
endobj

9 0 obj
  << /Length 10 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

10 0 obj
  2281
endobj

11 0 obj
  << /Length 12 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

12 0 obj
  1892
endobj

13 0 obj
  << /Length 14 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

14 0 obj
  2281
endobj

15 0 obj
  << /Length 16 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

16 0 obj
  2281
endobj

17 0 obj
  << /Length 18 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

18 0 obj
  2281
endobj

19 0 obj
  << /Length 20 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

20 0 obj
  1892
endobj

21 0 obj
  << /Length 22 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

22 0 obj
  2281
endobj

23 0 obj
  << /Length 24 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

24 0 obj
  1892
endobj

25 0 obj
  << /Length 26 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

26 0 obj
  2281
endobj

27 0 obj
  << /Length 28 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

28 0 obj
  2281
endobj

29 0 obj
  << /Length 30 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

30 0 obj
  1892
endobj

31 0 obj
  << /Length 32 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

32 0 obj
  2281
endobj

33 0 obj
  << /Length 34 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

34 0 obj
  2281
endobj

35 0 obj
  << /Length 36 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

36 0 obj
  2281
endobj

37 0 obj
  << /Length 38 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

38 0 obj
  1892
endobj

39 0 obj
  << /Length 40 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

40 0 obj
  2281
endobj

41 0 obj
  << /Length 42 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

42 0 obj
  1892
endobj

43 0 obj
  << /Length 44 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

44 0 obj
  2281
endobj

45 0 obj
  << /Length 46 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

46 0 obj
  2281
endobj

47 0 obj
  << /Length 48 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

48 0 obj
  2281
endobj

49 0 obj
  << /Length 50 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

50 0 obj
  1892
endobj

51 0 obj
  << /Length 52 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

52 0 obj
  1892
endobj

53 0 obj
  << /Length 54 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

54 0 obj
  530
endobj

55 0 obj
  << /Length 56 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

56 0 obj
  1892
endobj

57 0 obj
  << /Length 58 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

58 0 obj
  1892
endobj

59 0 obj
  << /Length 60 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

60 0 obj
  2281
endobj

61 0 obj
  << /Length 62 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

62 0 obj
  2281
endobj

63 0 obj
  << /Length 64 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

64 0 obj
  1892
endobj

65 0 obj
  << /Length 66 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

66 0 obj
  1892
endobj

67 0 obj
  << /Length 68 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

68 0 obj
  1892
endobj

69 0 obj
  << /Length 70 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

70 0 obj
  530
endobj

71 0 obj
  << /Length 72 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

72 0 obj
  2281
endobj

73 0 obj
  << /Length 74 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

74 0 obj
  1892
endobj

75 0 obj
  << /Length 76 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

76 0 obj
  530
endobj

77 0 obj
  << /Length 78 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

78 0 obj
  1892
endobj

79 0 obj
  << /Length 80 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

80 0 obj
  1892
endobj

81 0 obj
  << /Length 82 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

82 0 obj
  2281
endobj

83 0 obj
  << /Length 84 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

84 0 obj
  1892
endobj

85 0 obj
  << /Length 86 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

86 0 obj
  2281
endobj

87 0 obj
  << /Length 88 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

88 0 obj
  1892
endobj

89 0 obj
  << /Length 90 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

90 0 obj
  1892
endobj

91 0 obj
  << /Length 92 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

92 0 obj
  2281
endobj

93 0 obj
  << /Length 94 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

94 0 obj
  1892
endobj

95 0 obj
  << /Length 96 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

96 0 obj
  2281
endobj

97 0 obj
  << /Length 98 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

98 0 obj
  1892
endobj

99 0 obj
  << /Length 100 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

100 0 obj
  530
endobj

101 0 obj
  << /Length 102 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

102 0 obj
  2281
endobj

103 0 obj
  << /Length 104 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

104 0 obj
  2281
endobj

105 0 obj
  << /Length 106 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

106 0 obj
  2281
endobj

107 0 obj
  << /Length 108 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

108 0 obj
  2281
endobj

109 0 obj
  << /Length 110 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

110 0 obj
  1892
endobj

111 0 obj
  << /Length 112 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

112 0 obj
  1892
endobj

113 0 obj
  << /Length 114 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

114 0 obj
  530
endobj

115 0 obj
  << /Length 116 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

116 0 obj
  2281
endobj

117 0 obj
  << /Length 118 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

118 0 obj
  1892
endobj

119 0 obj
  << /Length 120 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

120 0 obj
  1892
endobj

121 0 obj
  << /Length 122 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

122 0 obj
  1892
endobj

123 0 obj
  << /Length 124 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

124 0 obj
  1892
endobj

125 0 obj
  << /Length 126 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

126 0 obj
  2281
endobj

127 0 obj
  << /Length 128 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

128 0 obj
  2281
endobj

129 0 obj
  << /Length 130 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

130 0 obj
  2281
endobj

131 0 obj
  << /Length 132 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

132 0 obj
  1892
endobj

133 0 obj
  << /Length 134 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

134 0 obj
  1892
endobj

135 0 obj
  << /Length 136 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

136 0 obj
  1892
endobj

137 0 obj
  << /Length 138 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

138 0 obj
  2281
endobj

139 0 obj
  << /Length 140 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

140 0 obj
  2281
endobj

141 0 obj
  << /Length 142 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

142 0 obj
  1892
endobj

143 0 obj
  << /Length 144 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

144 0 obj
  1892
endobj

145 0 obj
  << /Length 146 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

146 0 obj
  1892
endobj

147 0 obj
  << /Length 148 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

148 0 obj
  1892
endobj

149 0 obj
  << /Length 150 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

150 0 obj
  2281
endobj

151 0 obj
  << /Length 152 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

152 0 obj
  530
endobj

153 0 obj
  << /Length 154 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

154 0 obj
  530
endobj

155 0 obj
  << /Length 156 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

156 0 obj
  530
endobj

157 0 obj
  << /Length 158 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

158 0 obj
  530
endobj

159 0 obj
  << /Length 160 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

160 0 obj
  530
endobj

161 0 obj
  << /Length 162 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

162 0 obj
  2281
endobj

163 0 obj
  << /Length 164 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

164 0 obj
  530
endobj

165 0 obj
  << /Length 166 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

166 0 obj
  1892
endobj

167 0 obj
  << /Length 168 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

168 0 obj
  530
endobj

169 0 obj
  << /Length 170 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

170 0 obj
  2281
endobj

171 0 obj
  << /Length 172 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

172 0 obj
  1892
endobj

173 0 obj
  << /Length 174 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

174 0 obj
  530
endobj

175 0 obj
  << /Length 176 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

176 0 obj
  1892
endobj

177 0 obj
  << /Length 178 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

178 0 obj
  1892
endobj

179 0 obj
  << /Length 180 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

180 0 obj
  530
endobj

181 0 obj
  << /Length 182 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

182 0 obj
  2281
endobj

183 0 obj
  << /Length 184 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

184 0 obj
  530
endobj

185 0 obj
  << /Length 186 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

186 0 obj
  2281
endobj

187 0 obj
  << /Length 188 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

188 0 obj
  1892
endobj

189 0 obj
  << /Length 190 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

190 0 obj
  1892
endobj

191 0 obj
  << /Length 192 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

192 0 obj
  1892
endobj

193 0 obj
  << /Length 194 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

194 0 obj
  530
endobj

195 0 obj
  << /Length 196 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

196 0 obj
  530
endobj

197 0 obj
  << /Length 198 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

198 0 obj
  530
endobj

199 0 obj
  << /Length 200 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

200 0 obj
  1892
endobj

201 0 obj
  << /Length 202 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

202 0 obj
  530
endobj

203 0 obj
  << /Length 204 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

204 0 obj
  1892
endobj

205 0 obj
  << /Length 206 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

206 0 obj
  2281
endobj

207 0 obj
  << /Length 208 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

208 0 obj
  530
endobj

209 0 obj
  << /Length 210 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

210 0 obj
  530
endobj

211 0 obj
  << /Length 212 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

212 0 obj
  1892
endobj

213 0 obj
  << /Length 214 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

214 0 obj
  530
endobj

215 0 obj
  << /Length 216 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

216 0 obj
  2281
endobj

217 0 obj
  << /Length 218 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

218 0 obj
  530
endobj

219 0 obj
  << /Length 220 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

220 0 obj
  530
endobj

221 0 obj
  << /Length 222 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

222 0 obj
  530
endobj

223 0 obj
  << /Length 224 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

224 0 obj
  530
endobj

225 0 obj
  << /Length 226 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

226 0 obj
  2281
endobj

227 0 obj
  << /Length 228 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

228 0 obj
  530
endobj

229 0 obj
  << /Length 230 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

230 0 obj
  530
endobj

231 0 obj
  << /Length 232 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

232 0 obj
  530
endobj

233 0 obj
  << /Length 234 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

234 0 obj
  530
endobj

235 0 obj
  << /Length 236 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

236 0 obj
  530
endobj

237 0 obj
  << /Length 238 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

238 0 obj
  530
endobj

239 0 obj
  << /Length 240 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.956863 exch 0.486275 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 1.000000 add exch dup 0.000000 sub 0.000000 mul 0.956863 add exch dup 0.000000 sub 0.018411 mul 0.486275 add exch } if dup 0.426000 gt { exch pop exch pop exch pop dup 0.426000 sub 0.000000 mul 1.000000 add exch dup 0.426000 sub 0.025548 mul 0.956863 add exch dup 0.426000 sub 0.178834 mul 0.494118 add exch } if dup 0.579500 gt { exch pop exch pop exch pop dup 0.579500 sub 0.000000 mul 1.000000 add exch dup 0.579500 sub 0.035846 mul 0.960784 add exch dup 0.579500 sub 0.394308 mul 0.521569 add exch } if dup 0.688900 gt { exch pop exch pop exch pop dup 0.688900 sub 0.000000 mul 1.000000 add exch dup 0.688900 sub 0.044362 mul 0.964706 add exch dup 0.688900 sub 0.754148 mul 0.564706 add exch } if dup 0.777300 gt { exch pop exch pop exch pop dup 0.777300 sub 0.000000 mul 1.000000 add exch dup 0.777300 sub 0.103608 mul 0.968627 add exch dup 0.777300 sub 1.139690 mul 0.631373 add exch } if dup 0.853000 gt { exch pop exch pop exch pop dup 0.853000 sub 0.000000 mul 1.000000 add exch dup 0.853000 sub 0.116887 mul 0.976471 add exch dup 0.853000 sub 1.636422 mul 0.717647 add exch } if dup 0.920100 gt { exch pop exch pop exch pop dup 0.920100 sub 0.000000 mul 1.000000 add exch dup 0.920100 sub 0.198728 mul 0.984314 add exch dup 0.920100 sub 2.053522 mul 0.827451 add exch } if dup 0.979300 gt { exch pop exch pop exch pop dup 0.979300 sub 0.000000 mul 1.000000 add exch dup 0.979300 sub 0.189448 mul 0.996078 add exch dup 0.979300 sub 2.462823 mul 0.949020 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 1.000000 exch 1.000000 exch } if pop }
endstream
endobj

240 0 obj
  1694
endobj

241 0 obj
  << /Length 242 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.976471 exch 0.733333 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.259967 mul 1.000000 add exch dup 0.000000 sub -0.196945 mul 0.976471 add exch dup 0.000000 sub 0.078778 mul 0.733333 add exch } if dup 0.497800 gt { exch pop exch pop exch pop dup 0.497800 sub -0.288925 mul 0.870588 add exch dup 0.497800 sub -0.218646 mul 0.878431 add exch dup 0.497800 sub 0.085897 mul 0.772549 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.725490 exch 0.768627 exch 0.815686 exch } if pop }
endstream
endobj

242 0 obj
  534
endobj

243 0 obj
  << /Length 244 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

244 0 obj
  2281
endobj

245 0 obj
  << /Length 246 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

246 0 obj
  2281
endobj

247 0 obj
  << /Length 248 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

248 0 obj
  1892
endobj

249 0 obj
  << /Length 250 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.945098 exch 0.000000 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.000000 mul 1.000000 add exch dup 0.000000 sub -0.016505 mul 0.945098 add exch dup 0.000000 sub 0.008252 mul 0.000000 add exch } if dup 0.475200 gt { exch pop exch pop exch pop dup 0.475200 sub -0.022906 mul 1.000000 add exch dup 0.475200 sub -0.160345 mul 0.937255 add exch dup 0.475200 sub 0.045813 mul 0.003922 add exch } if dup 0.646400 gt { exch pop exch pop exch pop dup 0.646400 sub -0.032118 mul 0.996078 add exch dup 0.646400 sub -0.353294 mul 0.909804 add exch dup 0.646400 sub 0.128471 mul 0.011765 add exch } if dup 0.768500 gt { exch pop exch pop exch pop dup 0.768500 sub -0.039772 mul 0.992157 add exch dup 0.768500 sub -0.676132 mul 0.866667 add exch dup 0.768500 sub 0.238635 mul 0.027451 add exch } if dup 0.867100 gt { exch pop exch pop exch pop dup 0.867100 sub -0.093930 mul 0.988235 add exch dup 0.867100 sub -1.033227 mul 0.800000 add exch dup 0.867100 sub 0.328754 mul 0.050980 add exch } if dup 0.950600 gt { exch pop exch pop exch pop dup 0.950600 sub -0.079384 mul 0.980392 add exch dup 0.950600 sub -1.349528 mul 0.713726 add exch dup 0.950600 sub 0.476304 mul 0.078431 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.976471 exch 0.647059 exch 0.101961 exch } if pop }
endstream
endobj

250 0 obj
  1317
endobj

251 0 obj
  << /Length 252 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

252 0 obj
  530
endobj

253 0 obj
  << /Length 254 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

254 0 obj
  530
endobj

255 0 obj
  << /Length 256 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

256 0 obj
  1892
endobj

257 0 obj
  << /Length 258 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

258 0 obj
  1892
endobj

259 0 obj
  << /Length 260 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

260 0 obj
  530
endobj

261 0 obj
  << /Length 262 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

262 0 obj
  530
endobj

263 0 obj
  << /Length 264 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

264 0 obj
  530
endobj

265 0 obj
  << /Length 266 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

266 0 obj
  2281
endobj

267 0 obj
  << /Length 268 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.772549 exch 0.784314 exch 0.796078 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.238829 mul 0.772549 add exch dup 0.000000 sub 0.229276 mul 0.784314 add exch dup 0.000000 sub 0.219722 mul 0.796078 add exch } if dup 0.410500 gt { exch pop exch pop exch pop dup 0.410500 sub 0.219528 mul 0.870588 add exch dup 0.410500 sub 0.206223 mul 0.878431 add exch dup 0.410500 sub 0.192919 mul 0.886275 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 1.000000 exch 1.000000 exch } if pop }
endstream
endobj

268 0 obj
  530
endobj

269 0 obj
  << /Length 270 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

270 0 obj
  530
endobj

271 0 obj
  << /Length 272 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.151412 mul 0.976471 add exch dup 0.474600 sub 1.059882 mul 0.647059 add exch dup 0.474600 sub -0.302823 mul 0.101961 add exch } if dup 0.500500 gt { exch pop exch pop exch pop dup 0.500500 sub 0.131744 mul 0.980392 add exch dup 0.500500 sub 0.790462 mul 0.674510 add exch dup 0.500500 sub -0.219573 mul 0.094118 add exch } if dup 0.589800 gt { exch pop exch pop exch pop dup 0.589800 sub 0.041586 mul 0.992157 add exch dup 0.589800 sub 0.457447 mul 0.745098 add exch dup 0.589800 sub -0.124758 mul 0.074510 add exch } if dup 0.684100 gt { exch pop exch pop exch pop dup 0.684100 sub 0.036684 mul 0.996078 add exch dup 0.684100 sub 0.110053 mul 0.788235 add exch dup 0.684100 sub -0.036684 mul 0.062745 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.377074 mul 0.800000 add exch dup 0.791000 sub 1.885370 mul 0.058824 add exch } if dup 0.811800 gt { exch pop exch pop exch pop dup 0.811800 sub 0.000000 mul 1.000000 add exch dup 0.811800 sub 0.672268 mul 0.807843 add exch dup 0.811800 sub 2.913163 mul 0.098039 add exch } if dup 0.846800 gt { exch pop exch pop exch pop dup 0.846800 sub 0.000000 mul 1.000000 add exch dup 0.846800 sub 0.877309 mul 0.831373 add exch dup 0.846800 sub 3.684698 mul 0.200000 add exch } if dup 0.891500 gt { exch pop exch pop exch pop dup 0.891500 sub 0.000000 mul 1.000000 add exch dup 0.891500 sub 0.965538 mul 0.870588 add exch dup 0.891500 sub 4.307784 mul 0.364706 add exch } if dup 0.944300 gt { exch pop exch pop exch pop dup 0.944300 sub 0.000000 mul 1.000000 add exch dup 0.944300 sub 1.126483 mul 0.921569 add exch dup 0.944300 sub 4.928362 mul 0.592157 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

272 0 obj
  1892
endobj

273 0 obj
  << /Length 274 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

274 0 obj
  530
endobj

275 0 obj
  << /Length 276 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

276 0 obj
  530
endobj

277 0 obj
  << /Length 278 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

278 0 obj
  530
endobj

279 0 obj
  << /Length 280 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  1.000000 exch 0.964706 exch 0.588235 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub -0.259967 mul 1.000000 add exch dup 0.000000 sub -0.181189 mul 0.964706 add exch dup 0.000000 sub 0.212701 mul 0.588235 add exch } if dup 0.497800 gt { exch pop exch pop exch pop dup 0.497800 sub -0.288925 mul 0.870588 add exch dup 0.497800 sub -0.210837 mul 0.874510 add exch dup 0.497800 sub 0.242072 mul 0.694118 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 0.725490 exch 0.768627 exch 0.815686 exch } if pop }
endstream
endobj

280 0 obj
  534
endobj

281 0 obj
  << /Length 282 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

282 0 obj
  2281
endobj

283 0 obj
  << /Length 284 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

284 0 obj
  530
endobj

285 0 obj
  << /Length 286 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

286 0 obj
  530
endobj

287 0 obj
  << /Length 288 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

288 0 obj
  530
endobj

289 0 obj
  << /Length 290 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

290 0 obj
  2281
endobj

291 0 obj
  << /Length 292 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

292 0 obj
  2281
endobj

293 0 obj
  << /Length 294 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

294 0 obj
  2281
endobj

295 0 obj
  << /Length 296 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

296 0 obj
  2281
endobj

297 0 obj
  << /Length 298 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

298 0 obj
  530
endobj

299 0 obj
  << /Length 300 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

300 0 obj
  530
endobj

301 0 obj
  << /Length 302 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.976471 exch 0.647059 exch 0.101961 exch dup 0.474600 gt { exch pop exch pop exch pop dup 0.474600 sub 0.105418 mul 0.976471 add exch dup 0.474600 sub 1.897533 mul 0.647059 add exch dup 0.474600 sub -0.632511 mul 0.101961 add exch } if dup 0.511800 gt { exch pop exch pop exch pop dup 0.511800 sub 0.122933 mul 0.980392 add exch dup 0.511800 sub 1.598130 mul 0.717647 add exch dup 0.511800 sub -0.553199 mul 0.078431 add exch } if dup 0.575600 gt { exch pop exch pop exch pop dup 0.575600 sub 0.118298 mul 0.988235 add exch dup 0.575600 sub 1.064680 mul 0.819608 add exch dup 0.575600 sub -0.354893 mul 0.043137 add exch } if dup 0.641900 gt { exch pop exch pop exch pop dup 0.641900 sub 0.056103 mul 0.996078 add exch dup 0.641900 sub 0.617128 mul 0.890196 add exch dup 0.641900 sub -0.224410 mul 0.019608 add exch } if dup 0.711800 gt { exch pop exch pop exch pop dup 0.711800 sub 0.000000 mul 1.000000 add exch dup 0.711800 sub 0.148544 mul 0.933333 add exch dup 0.711800 sub -0.049515 mul 0.003922 add exch } if dup 0.791000 gt { exch pop exch pop exch pop dup 0.791000 sub 0.000000 mul 1.000000 add exch dup 0.791000 sub 0.000000 mul 0.945098 add exch dup 0.791000 sub 1.990645 mul 0.000000 add exch } if dup 0.810700 gt { exch pop exch pop exch pop dup 0.810700 sub 0.000000 mul 1.000000 add exch dup 0.810700 sub 0.236239 mul 0.945098 add exch dup 0.810700 sub 3.071106 mul 0.039216 add exch } if dup 0.843900 gt { exch pop exch pop exch pop dup 0.843900 sub 0.000000 mul 1.000000 add exch dup 0.843900 sub 0.184980 mul 0.952941 add exch dup 0.843900 sub 3.884573 mul 0.141176 add exch } if dup 0.886300 gt { exch pop exch pop exch pop dup 0.886300 sub 0.000000 mul 1.000000 add exch dup 0.886300 sub 0.156550 mul 0.960784 add exch dup 0.886300 sub 4.539943 mul 0.305882 add exch } if dup 0.936400 gt { exch pop exch pop exch pop dup 0.936400 sub 0.000000 mul 1.000000 add exch dup 0.936400 sub 0.280112 mul 0.968627 add exch dup 0.936400 sub 5.182073 mul 0.533333 add exch } if dup 0.992400 gt { exch pop exch pop exch pop dup 0.992400 sub 0.000000 mul 1.000000 add exch dup 0.992400 sub 0.000000 mul 0.984314 add exch dup 0.992400 sub 5.675947 mul 0.823529 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.984314 exch 0.866667 exch } if pop }
endstream
endobj

302 0 obj
  2281
endobj

303 0 obj
  << /Length 304 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

304 0 obj
  530
endobj

305 0 obj
  << /Length 306 0 R
     /Range [ 0.000000 1.000000 0.000000 1.000000 0.000000 1.000000 ]
     /Domain [ 0.000000 1.000000 ]
     /FunctionType 4
  >>
stream
{  0.988235 exch 0.705882 exch 0.105882 exch dup 0.000000 gt { exch pop exch pop exch pop dup 0.000000 sub 0.011548 mul 0.988235 add exch dup 0.000000 sub 0.265595 mul 0.705882 add exch dup 0.000000 sub 0.461904 mul 0.105882 add exch } if dup 0.679200 gt { exch pop exch pop exch pop dup 0.679200 sub 0.012224 mul 0.996078 add exch dup 0.679200 sub 0.232262 mul 0.886275 add exch dup 0.679200 sub 0.403403 mul 0.419608 add exch } if dup 1.000000 gt { exch pop exch pop exch pop 1.000000 exch 0.960784 exch 0.549020 exch } if pop }
endstream
endobj

306 0 obj
  530
endobj

307 0 obj
  << /Pattern << /P139 << /Matrix [ 11.138865 0.000000 -0.000000 11.417740 9.989746 6.513382 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 15 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P90 << /Matrix [ 11.138777 0.000000 -0.000000 11.417669 9.990234 6.513460 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 63 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P130 << /Matrix [ 11.139082 0.000000 -0.000000 11.417972 9.989746 6.513143 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 23 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P111 << /Matrix [ 11.139031 0.000000 -0.000000 11.417917 9.989746 6.513304 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 39 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P131 << /Matrix [ 11.138932 0.000000 -0.000000 11.417810 9.989746 6.513334 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 21 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P137 << /Matrix [ 11.138671 0.000000 -0.000000 11.417570 9.990234 6.513384 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 17 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P150 << /Matrix [ 30.375332 0.000000 -0.000000 31.135815 -1.995605 -14.044598 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 3 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P141 << /Matrix [ 11.138985 0.000000 -0.000000 11.417857 9.989746 6.513379 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 13 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P125 << /Matrix [ 11.138932 0.000000 -0.000000 11.417817 9.990234 6.513328 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 27 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P149 << /Matrix [ 4.843354 0.000000 -0.000000 5.591758 12.953125 9.935540 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 5 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P76 << /Matrix [ 11.139153 0.000000 -0.000000 11.418050 9.989746 6.513118 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 89 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P78 << /Matrix [ 11.138887 0.000000 -0.000000 11.417774 9.990234 6.513363 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 87 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P107 << /Matrix [ 11.139037 0.000000 -0.000000 11.417917 9.990234 6.513250 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 43 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P105 << /Matrix [ 11.138602 0.000000 -0.000000 11.417482 9.990234 6.513433 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 45 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P74 << /Matrix [ 11.138551 0.000000 -0.000000 11.417414 9.990234 6.513472 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 93 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P64 << /Matrix [ 11.138754 0.000000 -0.000000 11.417655 9.989746 6.513398 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 133 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P86 << /Matrix [ 11.139135 0.000000 -0.000000 11.418009 9.989746 6.513227 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 131 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P132 << /Matrix [ 11.139193 0.000000 -0.000000 11.418077 9.989746 6.513205 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 19 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P122 << /Matrix [ 11.138883 0.000000 -0.000000 11.417756 9.990234 6.513366 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 29 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P70 << /Matrix [ 11.138735 0.000000 -0.000000 11.417632 9.990234 6.513383 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 109 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P83 << /Matrix [ 11.139003 0.000000 -0.000000 11.417889 9.990234 6.513325 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 107 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P55 << /Matrix [ 11.138708 0.000000 -0.000000 11.417585 9.990234 6.513346 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 149 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P118 << /Matrix [ 11.138956 0.000000 -0.000000 11.417842 9.990234 6.513211 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 49 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P98 << /Matrix [ 11.138517 0.000000 -0.000000 11.417373 9.990234 6.513574 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 51 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P68 << /Matrix [ 11.139277 0.000000 -0.000000 11.418161 9.989746 6.513144 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 111 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P145 << /Matrix [ 11.138813 0.000000 -0.000000 11.417682 9.989746 6.513364 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 9 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P119 << /Matrix [ 11.138887 0.000000 -0.000000 11.417782 9.990234 6.513264 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 31 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P75 << /Matrix [ 11.139281 0.000000 -0.000000 11.418163 9.989746 6.513103 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 91 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P144 << /Matrix [ 11.138969 0.000000 -0.000000 11.417847 9.989746 6.513336 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 11 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P113 << /Matrix [ 11.138996 0.000000 -0.000000 11.417876 9.990234 6.513291 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 35 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P121 << /Matrix [ 11.139208 0.000000 -0.000000 11.418095 9.989746 6.513042 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 33 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P112 << /Matrix [ 11.138340 0.000000 -0.000000 11.417204 9.990723 6.513590 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 37 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P151 << /Matrix [ 19.239269 0.000000 -0.000000 19.720957 6.251953 1.381872 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 1 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P127 << /Matrix [ 11.138938 0.000000 -0.000000 11.417814 9.990234 6.513353 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 25 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P110 << /Matrix [ 11.138732 0.000000 -0.000000 11.417590 9.990234 6.513402 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 41 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P101 << /Matrix [ 11.138893 0.000000 -0.000000 11.417767 9.990234 6.513340 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 47 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P71 << /Matrix [ 11.139102 0.000000 -0.000000 11.417991 9.990234 6.513238 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 105 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P96 << /Matrix [ 11.138906 0.000000 -0.000000 11.417778 9.990234 6.513550 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 55 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P29 << /Matrix [ 3.919693 0.000000 -0.000000 4.017828 14.055176 13.263231 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 53 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P93 << /Matrix [ 11.139007 0.000000 -0.000000 11.417871 9.989746 6.513304 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 61 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P84 << /Matrix [ 11.139168 0.000000 -0.000000 11.418050 9.990234 6.513331 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 65 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P148 << /Matrix [ 4.132872 0.000000 -0.000000 4.236341 13.477539 10.006488 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 7 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P95 << /Matrix [ 11.138809 0.000000 -0.000000 11.417689 9.990234 6.513417 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 59 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P124 << /Matrix [ 11.139244 0.000000 -0.000000 11.418143 9.989746 6.513200 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 57 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P126 << /Matrix [ 11.139158 0.000000 -0.000000 11.418034 9.990234 6.513218 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 67 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P22 << /Matrix [ 3.770320 0.000000 -0.000000 3.864717 13.197266 7.224821 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 69 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P77 << /Matrix [ 11.139263 0.000000 -0.000000 11.418129 9.989746 6.513290 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 71 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P82 << /Matrix [ 11.139055 0.000000 -0.000000 11.417930 9.990234 6.513238 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 73 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P40 << /Matrix [ 3.431738 0.000000 -0.000000 3.517650 15.180664 13.548412 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 75 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P80 << /Matrix [ 11.139307 0.000000 -0.000000 11.418188 9.989746 6.513147 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 77 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P97 << /Matrix [ 11.138878 0.000000 -0.000000 11.417745 9.990723 6.513400 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 81 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P128 << /Matrix [ 11.139288 0.000000 -0.000000 11.418185 9.990234 6.513120 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 79 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P136 << /Matrix [ 11.138916 0.000000 -0.000000 11.417786 9.989746 6.513268 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 83 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P79 << /Matrix [ 11.139223 0.000000 -0.000000 11.418111 9.989746 6.513156 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 85 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P69 << /Matrix [ 11.138999 0.000000 -0.000000 11.417888 9.990234 6.513371 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 185 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P60 << /Matrix [ 11.138428 0.000000 -0.000000 11.417276 9.990234 6.513548 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 187 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P39 << /Matrix [ 3.309190 0.000000 -0.000000 3.392039 12.554199 7.595572 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 99 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P57 << /Matrix [ 11.139055 0.000000 -0.000000 11.417947 9.990234 6.513274 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 101 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P108 << /Matrix [ 11.138921 0.000000 -0.000000 11.417800 9.990234 6.513330 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 97 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P73 << /Matrix [ 11.138823 0.000000 -0.000000 11.417700 9.990234 6.513346 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 103 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P129 << /Matrix [ 11.138987 0.000000 -0.000000 11.417878 9.990234 6.513305 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 95 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P67 << /Matrix [ 11.138638 0.000000 -0.000000 11.417497 9.990234 6.513556 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 115 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P4 << /Matrix [ 3.776806 0.000000 -0.000000 3.871363 16.208984 8.538465 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 113 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P134 << /Matrix [ 11.139078 0.000000 -0.000000 11.417950 9.989258 6.513203 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 117 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P94 << /Matrix [ 11.138721 0.000000 -0.000000 11.417621 9.990234 6.513402 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 119 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P66 << /Matrix [ 11.138945 0.000000 -0.000000 11.417804 9.989746 6.513295 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 123 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P52 << /Matrix [ 11.139008 0.000000 -0.000000 11.417888 9.990234 6.513288 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 121 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P133 << /Matrix [ 11.138701 0.000000 -0.000000 11.417562 9.989746 6.513431 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 125 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P65 << /Matrix [ 11.139140 0.000000 -0.000000 11.418004 9.989746 6.513217 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 129 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P115 << /Matrix [ 11.139375 0.000000 -0.000000 11.418268 9.990234 6.513113 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 127 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P106 << /Matrix [ 11.139011 0.000000 -0.000000 11.417902 9.989746 6.513304 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 135 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P89 << /Matrix [ 11.139143 0.000000 -0.000000 11.418017 9.990234 6.513387 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 137 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P63 << /Matrix [ 11.139034 0.000000 -0.000000 11.417918 9.989746 6.513326 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 139 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P102 << /Matrix [ 11.138992 0.000000 -0.000000 11.417858 9.989746 6.513271 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 141 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P88 << /Matrix [ 11.139194 0.000000 -0.000000 11.418090 9.989746 6.513131 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 143 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P58 << /Matrix [ 11.138476 0.000000 -0.000000 11.417352 9.990234 6.513686 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 145 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P56 << /Matrix [ 11.138838 0.000000 -0.000000 11.417712 9.989746 6.513387 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 147 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P33 << /Matrix [ 3.849713 0.000000 -0.000000 3.946096 16.001465 12.190645 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 151 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P48 << /Matrix [ 3.710530 0.000000 -0.000000 3.803431 16.687988 11.154226 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 153 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P10 << /Matrix [ 3.866989 0.000000 -0.000000 3.963803 12.756348 13.271511 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 155 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P25 << /Matrix [ 3.830165 0.000000 -0.000000 3.926060 16.077637 12.227443 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 157 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P47 << /Matrix [ 3.692363 0.000000 -0.000000 3.784807 10.769531 9.604834 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 159 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P109 << /Matrix [ 11.139158 0.000000 -0.000000 11.418046 9.989746 6.513244 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 161 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P44 << /Matrix [ 3.676165 0.000000 -0.000000 3.768208 16.406738 8.470790 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 163 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P54 << /Matrix [ 11.138858 0.000000 -0.000000 11.417730 9.990234 6.513353 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 165 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P16 << /Matrix [ 3.329286 0.000000 -0.000000 3.412643 13.200195 7.090950 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 167 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P43 << /Matrix [ 3.817122 0.000000 -0.000000 3.912689 10.978027 12.087479 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 173 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P103 << /Matrix [ 11.139496 0.000000 -0.000000 11.418382 9.989746 6.513144 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 169 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P92 << /Matrix [ 11.138125 0.000000 -0.000000 11.416986 9.990234 6.513884 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 171 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P72 << /Matrix [ 11.139570 0.000000 -0.000000 11.418484 9.989746 6.512997 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 175 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P45 << /Matrix [ 3.760883 0.000000 -0.000000 3.855039 11.941406 7.635164 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 179 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P140 << /Matrix [ 11.138821 0.000000 -0.000000 11.417692 9.989746 6.513376 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 177 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P135 << /Matrix [ 11.138783 0.000000 -0.000000 11.417653 9.990234 6.513400 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 181 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P41 << /Matrix [ 3.238484 0.000000 -0.000000 3.319565 16.897461 9.228371 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 183 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P120 << /Matrix [ 11.139000 0.000000 -0.000000 11.417873 9.990234 6.513302 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 191 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P37 << /Matrix [ 3.183336 0.000000 -0.000000 3.263038 14.899414 7.369271 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 193 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P142 << /Matrix [ 11.138824 0.000000 -0.000000 11.417698 9.989746 6.513378 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 189 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P34 << /Matrix [ 3.771313 0.000000 -0.000000 3.865735 11.309082 8.270504 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 195 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P32 << /Matrix [ 3.678355 0.000000 -0.000000 3.770445 15.630371 7.858477 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 197 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P100 << /Matrix [ 11.138998 0.000000 -0.000000 11.417881 9.990234 6.513294 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 199 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P30 << /Matrix [ 3.830478 0.000000 -0.000000 3.926381 13.104004 7.174461 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 201 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P104 << /Matrix [ 11.137587 0.000000 -0.000000 11.416404 9.990723 6.514039 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 203 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P53 << /Matrix [ 11.138845 0.000000 -0.000000 11.417749 9.990234 6.513372 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 205 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P35 << /Matrix [ 3.230352 0.000000 -0.000000 3.311227 10.862793 9.589019 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 207 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P49 << /Matrix [ 3.724073 0.000000 -0.000000 3.817312 14.471191 7.331645 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 209 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P116 << /Matrix [ 11.139239 0.000000 -0.000000 11.418120 9.990234 6.513108 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 211 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P19 << /Matrix [ 3.731426 0.000000 -0.000000 3.824849 10.674805 10.737827 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 213 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P81 << /Matrix [ 11.138808 0.000000 -0.000000 11.417680 9.990234 6.513427 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 215 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P9 << /Matrix [ 3.923967 0.000000 -0.000000 4.022208 14.437012 7.211713 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 217 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P23 << /Matrix [ 3.764402 0.000000 -0.000000 3.858650 11.735352 12.771790 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 219 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P28 << /Matrix [ 3.896882 0.000000 -0.000000 3.994448 16.637695 9.709105 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 221 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P21 << /Matrix [ 3.669072 0.000000 -0.000000 3.760930 14.147461 13.355411 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 223 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P59 << /Matrix [ 11.138670 0.000000 -0.000000 11.417535 9.990234 6.513434 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 225 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P17 << /Matrix [ 3.166350 0.000000 -0.000000 3.245618 17.215820 9.862909 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 227 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P27 << /Matrix [ 3.846092 0.000000 -0.000000 3.942387 10.669434 10.759968 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 229 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P36 << /Matrix [ 3.192468 0.000000 -0.000000 3.272392 17.101562 11.652992 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 231 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P38 << /Matrix [ 3.254753 0.000000 -0.000000 3.336239 12.953613 13.750835 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 233 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P26 << /Matrix [ 3.697261 0.000000 -0.000000 3.789829 11.146973 8.248700 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 235 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P15 << /Matrix [ 3.208047 0.000000 -0.000000 3.288369 14.552734 13.856109 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 237 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P2 << /Matrix [ 10.134645 0.000000 -0.000000 10.388382 10.401367 7.151817 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 239 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P152 << /Matrix [ 19.684134 0.000000 -0.000000 20.176954 -1.291992 -4.772657 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 241 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P143 << /Matrix [ 11.139056 0.000000 -0.000000 11.417941 9.989746 6.513310 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 243 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P61 << /Matrix [ 11.138887 0.000000 -0.000000 11.417758 9.990234 6.513280 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 245 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P62 << /Matrix [ 11.138842 0.000000 -0.000000 11.417711 9.989746 6.513418 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 247 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P147 << /Matrix [ 5.253214 0.000000 -0.000000 5.384738 12.872559 9.623127 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 249 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P13 << /Matrix [ 3.253787 0.000000 -0.000000 3.335250 16.651855 12.248956 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 251 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P12 << /Matrix [ 3.192976 0.000000 -0.000000 3.272918 15.633789 7.672048 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 253 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P146 << /Matrix [ 11.138922 0.000000 -0.000000 11.417802 9.990234 6.513335 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 255 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P114 << /Matrix [ 11.138911 0.000000 -0.000000 11.417803 9.990234 6.513304 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 257 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P50 << /Matrix [ 3.701433 0.000000 -0.000000 3.794104 12.945312 13.386712 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 259 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P20 << /Matrix [ 3.628076 0.000000 -0.000000 3.718909 16.793945 9.879785 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 261 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P46 << /Matrix [ 3.837476 0.000000 -0.000000 3.933568 15.466309 12.970279 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 263 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P123 << /Matrix [ 11.139021 0.000000 -0.000000 11.417905 9.990234 6.513225 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 265 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P1 << /Matrix [ 15.646824 0.000000 -0.000000 1.751162 0.451172 -0.023421 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 267 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P5 << /Matrix [ 3.824633 0.000000 -0.000000 3.920387 11.988281 7.675045 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 269 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P138 << /Matrix [ 11.138056 0.000000 -0.000000 11.416927 9.990234 6.513714 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 271 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P8 << /Matrix [ 3.774180 0.000000 -0.000000 3.868675 16.637695 11.212601 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 273 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P42 << /Matrix [ 3.296556 0.000000 -0.000000 3.379090 10.994629 11.929267 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 275 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P11 << /Matrix [ 3.238968 0.000000 -0.000000 3.320060 12.277832 13.338593 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 277 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P153 << /Matrix [ 12.467776 0.000000 -0.000000 12.779922 4.052734 5.224175 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 279 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P117 << /Matrix [ 11.139260 0.000000 -0.000000 11.418149 9.990234 6.513080 ]
                          /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                      /ColorSpace /DeviceRGB
                                      /Function 281 0 R
                                      /Domain [ 0.000000 1.000000 ]
                                      /ShadingType 3
                                      /Extend [ true true ]
                                   >>
                          /PatternType 2
                          /Type /Pattern
                       >>
                 /P14 << /Matrix [ 3.256440 0.000000 -0.000000 3.337973 11.157227 8.824091 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 283 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P7 << /Matrix [ 3.889159 0.000000 -0.000000 3.986531 10.744141 9.290896 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 285 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P31 << /Matrix [ 3.826831 0.000000 -0.000000 3.922641 11.799805 12.695600 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 287 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P85 << /Matrix [ 11.138975 0.000000 -0.000000 11.417863 9.990234 6.513305 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 289 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P91 << /Matrix [ 11.139069 0.000000 -0.000000 11.417946 9.990234 6.513268 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 291 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P99 << /Matrix [ 11.139022 0.000000 -0.000000 11.417900 9.990234 6.513283 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 293 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P87 << /Matrix [ 11.139005 0.000000 -0.000000 11.417902 9.990234 6.513350 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 295 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P18 << /Matrix [ 3.259155 0.000000 -0.000000 3.340750 10.715332 11.214663 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 297 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P24 << /Matrix [ 3.846380 0.000000 -0.000000 3.942676 15.552246 7.657037 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 299 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P51 << /Matrix [ 11.139576 0.000000 -0.000000 11.418473 9.989746 6.513091 ]
                         /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                     /ColorSpace /DeviceRGB
                                     /Function 301 0 R
                                     /Domain [ 0.000000 1.000000 ]
                                     /ShadingType 3
                                     /Extend [ true true ]
                                  >>
                         /PatternType 2
                         /Type /Pattern
                      >>
                 /P3 << /Matrix [ 3.744414 0.000000 -0.000000 3.838163 11.175293 11.985949 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 303 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
                 /P6 << /Matrix [ 3.681251 0.000000 -0.000000 3.773415 15.401855 12.888748 ]
                        /Shading << /Coords [ 0.500000 0.500000 0.000000 0.500000 0.500000 0.500000 ]
                                    /ColorSpace /DeviceRGB
                                    /Function 305 0 R
                                    /Domain [ 0.000000 1.000000 ]
                                    /ShadingType 3
                                    /Extend [ true true ]
                                 >>
                        /PatternType 2
                        /Type /Pattern
                     >>
              >> >>
endobj

308 0 obj
  << /Length 309 0 R >>
stream
/DeviceRGB CS
/DeviceRGB cs
q
1.000000 0.000000 -0.000000 1.000000 0.518066 -0.014359 cm
/Pattern cs
/P1 scn
15.660042 0.884833 m
15.660042 0.397957 12.162440 0.014358 7.830021 0.014358 c
3.511995 0.014358 0.000000 0.412711 0.000000 0.884833 c
0.000000 1.371708 3.497601 1.755306 7.830021 1.755306 c
12.148047 1.770060 15.660042 1.371708 15.660042 0.884833 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.420898 7.141239 cm
/Pattern cs
/P2 scn
10.132966 5.193331 m
10.132966 2.331098 7.858806 0.000000 5.066483 0.000000 c
2.274160 0.000000 0.000000 2.331098 0.000000 5.193331 c
0.000000 8.055564 2.274160 10.386662 5.066483 10.386662 c
7.858806 10.386662 10.132966 8.055564 10.132966 5.193331 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.449707 11.759171 cm
/Pattern cs
/P3 scn
0.784783 1.327840 m
1.317339 0.575397 2.065796 0.103275 2.900614 0.014753 c
2.958188 -0.000001 l
2.943795 0.059014 l
2.886221 0.236059 2.886221 0.413105 2.886221 0.590151 c
2.886221 0.634412 l
2.843041 0.634412 l
2.310485 0.590150 1.734748 0.826211 1.144618 1.357347 c
0.338587 2.183559 -0.035642 3.334353 0.151472 4.485148 c
0.065112 4.514656 l
-0.136396 3.437630 0.137079 2.227820 0.784783 1.327840 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.552246 8.262531 cm
/Pattern cs
/P4 scn
0.014393 4.573670 m
0.201508 3.998273 l
0.230294 3.998273 l
1.971898 3.762212 2.878684 1.799961 2.749143 0.014754 c
2.835503 0.000000 l
2.993830 1.254071 2.662781 2.596665 1.971898 3.496645 c
1.482521 4.145811 0.820425 4.529409 0.057574 4.617931 c
0.000000 4.617931 l
0.014393 4.573670 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.500488 8.233006 cm
/Pattern cs
/P5 scn
4.505144 2.950757 m
4.447570 2.921250 4.375604 2.921250 4.303637 2.921250 c
4.217276 2.921250 4.130915 2.921250 4.130915 2.847481 c
4.145308 2.876988 l
3.972587 2.626174 3.843046 2.360606 3.713505 2.109791 c
3.526390 1.740947 3.353670 1.401610 3.080195 1.106534 c
2.418097 0.472121 1.496917 0.118030 0.503770 0.118030 c
0.359836 0.118030 0.187114 0.132785 0.014393 0.147538 c
0.000000 0.059015 l
0.158328 0.044261 0.331049 0.029508 0.489377 0.029508 c
1.698425 0.000000 2.677178 0.309830 3.411243 0.973750 c
3.972587 1.431118 4.361210 2.080284 4.548325 2.876988 c
4.562717 2.965511 l
4.505144 2.950757 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 14.969238 13.407883 cm
/Pattern cs
/P6 scn
3.670325 2.969198 m
2.878686 2.939690 2.159015 2.777398 1.511310 2.467569 c
0.561344 1.921679 0.000000 1.006945 0.000000 0.062703 c
0.000000 0.003688 l
0.618918 0.210240 l
0.618918 0.239748 l
0.719672 1.847910 2.230982 2.792152 3.670325 2.895428 c
3.886226 2.895428 4.102128 2.895428 4.318029 2.880675 c
4.318029 2.969198 l
4.116521 2.983951 3.886226 2.983951 3.670325 2.969198 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 9.974609 9.988697 cm
/Pattern cs
/P7 scn
0.000000 2.286835 m
0.906785 0.678673 3.051404 -0.000001 4.692254 0.811457 c
4.807401 0.929487 4.922548 1.047518 5.095269 1.106533 c
5.181630 1.136040 l
5.095269 1.180302 l
5.052089 1.195055 5.008909 1.239317 4.965729 1.283578 c
4.893762 1.357347 4.807402 1.431116 4.749828 1.357347 c
4.764221 1.372101 l
4.548320 1.313086 4.332418 1.224563 4.116517 1.150794 c
3.699108 0.988502 3.281699 0.826210 2.806716 0.826210 c
1.770390 0.885226 0.705277 1.460623 0.043180 2.331097 c
0.000000 2.286835 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.904785 12.104507 cm
/Pattern cs
/P8 scn
0.028786 1.439865 m
0.000000 1.410358 l
0.028786 1.380850 l
0.100753 1.307081 0.172721 1.277574 0.244688 1.248066 c
0.316655 1.218558 0.388622 1.189051 0.446196 1.130036 c
0.474983 1.100528 l
0.503770 1.115282 l
1.914324 2.192308 3.986976 1.513634 4.965729 0.215301 c
5.023301 0.259562 l
4.764220 0.628407 4.389992 0.997252 3.886222 1.366096 c
3.799862 1.425111 3.699109 1.469373 3.612748 1.528388 c
3.526388 1.572649 3.440027 1.616911 3.353666 1.675926 c
2.230980 2.295585 0.863605 2.192308 0.028786 1.439865 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.329102 6.669090 cm
/Pattern cs
/P9 scn
1.295409 5.208084 m
1.295409 5.149068 1.295408 5.104807 1.252228 5.060546 c
1.122687 5.001531 1.007540 4.868746 0.949966 4.735962 c
0.935573 4.706455 l
0.949966 4.691701 l
1.352982 4.249088 1.554491 3.688444 1.554491 3.054032 c
1.554491 2.965509 1.554490 2.862232 1.540097 2.773710 c
1.439343 1.755699 0.834819 0.693426 0.000000 0.073767 c
0.043181 -0.000002 l
0.921180 0.575396 1.583277 1.563900 1.813572 2.655679 c
2.000687 3.599921 1.842359 4.514656 1.367376 5.237591 c
1.295409 5.355621 l
1.295409 5.208084 l
1.295409 5.208084 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.645020 12.732903 cm
/Pattern cs
/P10 scn
1.309801 4.809731 m
0.532556 4.027780 0.100754 3.201568 0.014393 2.316341 c
0.000000 1.962251 l
0.000000 1.150793 0.230294 0.501626 0.676491 0.029506 c
0.705277 -0.000002 l
0.734064 0.029506 l
0.806032 0.103274 0.834819 0.177043 0.863605 0.250813 c
0.892392 0.324581 0.921179 0.398350 0.978752 0.457366 c
1.007540 0.486873 l
0.978752 0.516380 l
0.604523 1.003255 0.403015 1.622914 0.403015 2.286834 c
0.403015 3.172061 0.762851 4.086795 1.381769 4.750715 c
1.554490 4.927761 1.712818 5.075298 1.871145 5.193328 c
1.813571 5.267097 l
1.655244 5.149067 1.482523 5.001530 1.309801 4.809731 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 12.709473 12.983727 cm
/Pattern cs
/P11 scn
0.000000 4.190073 m
0.057574 3.835982 0.115147 3.452384 0.244688 3.098293 c
0.460589 1.711438 0.906785 0.781949 1.684031 0.088521 c
1.770391 -0.000001 1.856752 0.088522 1.914325 0.147537 c
1.971899 0.250813 2.015079 0.309829 2.058259 0.309829 c
2.144620 0.309829 l
2.087047 0.383597 l
1.021933 1.622915 0.345442 2.906494 0.071967 4.204826 c
0.000000 4.190073 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.106445 7.353577 cm
/Pattern cs
/P12 scn
0.158327 4.110495 m
0.057573 4.051479 0.000000 3.933449 0.000000 3.859680 c
0.000000 3.682635 0.129540 3.579358 0.259081 3.446574 c
0.331048 3.372805 0.417409 3.313790 0.474982 3.225267 c
0.561344 3.092483 l
0.633311 2.974453 0.690884 2.885930 0.777245 2.797408 c
1.367375 1.794150 1.741604 0.908924 1.957505 0.008943 c
2.029472 0.023696 l
1.842357 0.849908 l
1.583276 2.059718 1.324195 3.328544 0.345442 4.125248 c
0.287869 4.154756 0.230295 4.154756 0.158327 4.110495 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.135254 12.909950 cm
/Pattern cs
/P13 scn
0.028787 0.516384 m
0.000000 0.486877 l
0.028787 0.457369 l
0.086361 0.398354 0.143934 0.324585 0.201508 0.250817 c
0.259082 0.177048 0.316656 0.103279 0.388623 0.029510 c
0.417409 0.000002 l
0.446196 0.029510 l
0.561343 0.147540 0.690884 0.265570 0.806031 0.368847 c
0.921179 0.472123 1.050719 0.590153 1.165867 0.708183 c
1.223441 0.767199 1.281014 0.796706 1.367375 0.826214 c
1.439342 0.855721 1.525703 0.885229 1.583276 0.958998 c
1.770391 1.150797 1.971899 1.268827 2.202194 1.416365 c
2.360521 1.504888 l
2.374915 1.519641 2.418096 1.519641 2.446882 1.519641 c
2.490063 1.519641 2.547637 1.519641 2.590817 1.563903 c
2.921865 1.785209 3.296093 1.903240 3.655929 2.021270 c
4.073338 2.168808 l
4.058945 2.242577 l
2.777931 2.021270 1.180261 1.622918 0.028787 0.516384 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.607910 9.560852 cm
/Pattern cs
/P14 scn
3.843042 2.036022 m
2.403701 1.003257 1.223440 0.413106 0.000000 0.088523 c
0.014394 -0.000000 l
1.741604 0.073768 3.123371 0.604905 4.145303 1.593409 c
4.202877 1.696685 4.102123 1.785208 4.015762 1.873731 c
3.972582 1.917992 3.929403 1.962253 3.900616 1.991761 c
3.886221 2.036022 l
3.843042 2.036022 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.142090 13.485344 cm
/Pattern cs
/P15 scn
0.000000 0.044259 m
0.000000 -0.000003 l
0.618917 -0.000003 l
0.618917 0.044259 l
0.561343 1.313084 0.964358 2.729446 1.799175 4.219578 c
1.727208 4.263840 l
0.921178 3.024522 0.129541 1.667174 0.000000 0.044259 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.716797 6.728100 cm
/Pattern cs
/P16 scn
1.986290 4.337614 m
1.813569 4.278599 1.640848 4.278599 1.482521 4.337614 c
1.424947 4.352367 l
1.424947 4.352367 1.424947 3.821232 1.424947 3.806478 c
1.180259 2.611422 0.949965 1.608164 0.359835 0.604906 c
0.244688 0.486876 0.115146 0.354092 0.057573 0.162293 c
0.000000 0.000001 l
0.115147 0.118032 l
1.324193 1.283581 1.770390 2.950758 2.029471 4.278598 c
2.043864 4.352367 l
1.986290 4.337614 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.638672 10.555271 cm
/Pattern cs
/P17 scn
0.028788 1.912074 m
0.000000 1.897321 l
0.000000 1.336677 l
0.043181 1.336677 l
1.367377 1.336677 2.576425 0.894064 3.684719 0.436697 c
3.799866 0.348175 3.929408 0.244898 4.058949 0.126868 c
4.116522 0.185883 l
4.001374 0.303913 3.871834 0.436697 3.756686 0.495713 c
3.742294 0.495713 l
3.281704 0.849803 2.777934 1.130124 2.159016 1.395692 c
2.043868 1.454708 l
1.410557 1.764537 0.705279 2.089120 0.028788 1.912074 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.118652 11.788673 cm
/Pattern cs
/P18 scn
0.000000 2.065529 m
0.633310 1.622915 l
1.712817 0.826211 2.849899 -0.000000 4.202881 0.354090 c
4.246062 0.368844 l
4.217275 0.413106 l
4.188488 0.472121 4.116520 0.663920 4.159701 0.737689 c
4.188488 0.796704 l
4.130914 0.796704 l
2.590817 0.944241 1.453736 1.313086 0.403015 2.006514 c
0.331048 2.036021 0.273475 2.050775 0.215901 2.080282 c
0.158328 2.095036 0.100753 2.109790 0.043180 2.139297 c
0.000000 2.065529 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.276855 11.124733 cm
/Pattern cs
/P19 scn
0.000000 3.172061 m
0.316655 1.858975 1.194654 0.752441 2.288553 0.280320 c
3.037011 -0.000002 3.684714 -0.000002 4.274844 0.280320 c
4.303632 0.295074 l
4.102124 0.870471 l
4.058943 0.840964 l
3.396846 0.427858 2.504454 0.516381 1.612062 1.091778 c
0.892391 1.549145 0.331048 2.316342 0.086360 3.201569 c
0.000000 3.172061 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.351074 9.968693 cm
/Pattern cs
/P20 scn
0.071967 3.221591 m
0.000000 3.206837 l
0.057574 3.162576 l
0.071967 3.147822 0.086361 3.088807 0.100755 3.044546 c
0.115148 2.970777 0.143934 2.897008 0.201508 2.897008 c
1.367375 2.897008 2.331735 2.601932 3.152160 1.997027 c
3.598356 1.583922 3.958192 1.067539 4.202880 0.433127 c
4.274847 0.462635 l
3.655930 2.247842 1.914325 3.767481 0.071967 3.221591 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 14.456543 13.116501 cm
/Pattern cs
/P21 scn
0.094891 0.088523 m
0.123678 0.000001 l
0.166858 0.073770 l
0.253218 0.206554 0.368366 0.236061 0.497907 0.265569 c
0.670628 0.309830 l
0.656235 0.354091 l
0.382759 1.018012 0.397153 1.740947 0.699415 2.434375 c
1.088038 3.319602 1.908463 4.057291 2.829642 4.381874 c
2.800856 4.455643 l
0.900923 3.939260 -0.365699 1.903239 0.094891 0.088523 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.458008 7.023170 cm
/Pattern cs
/P22 scn
2.821110 4.381872 m
2.763536 4.219580 2.605209 4.101550 2.446881 4.101550 c
2.389307 4.101550 l
2.403701 4.042535 l
2.475668 3.821228 2.518848 3.585168 2.518848 3.334353 c
2.518848 2.670433 2.216587 2.006513 1.986292 1.578653 c
1.813571 1.298331 1.597670 1.106532 1.352982 0.899979 c
1.180261 0.752441 1.007539 0.604903 0.863605 0.427858 c
0.863605 0.427858 0.762852 0.354089 0.762852 0.339335 c
0.518164 0.221305 0.259082 0.132782 0.000000 0.073767 c
0.014393 -0.000002 l
0.057574 0.014752 l
0.302262 0.059013 0.575737 0.118029 0.806031 0.280320 c
1.209047 0.472119 1.597670 0.752441 2.058259 1.180301 c
2.677176 1.858975 3.037011 2.729448 3.037011 3.555660 c
3.037011 3.850736 2.993831 4.131058 2.907470 4.396626 c
2.864291 4.514656 l
2.821110 4.381872 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 12.590820 12.246017 cm
/Pattern cs
/P23 scn
1.630046 0.014757 m
1.658832 0.000003 l
1.673225 0.014757 l
1.745192 0.088526 1.745192 0.177049 1.745192 0.250818 c
1.745192 0.324587 1.745193 0.383602 1.788373 0.427863 c
1.831553 0.472125 l
1.788373 0.501632 l
0.176309 1.357352 -0.140346 3.540912 0.492965 5.075305 c
0.420998 5.104813 l
-0.241100 3.599927 -0.313067 0.914738 1.630046 0.014757 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.480469 7.096954 cm
/Pattern cs
/P24 scn
0.273475 5.222837 m
0.230295 5.060546 l
0.201508 4.913008 0.158328 4.750717 0.043181 4.632686 c
0.000000 4.588425 l
0.057574 4.558918 l
0.690885 4.249088 1.151474 3.688445 1.396162 2.936002 c
1.698424 2.021268 1.612064 0.899981 1.165868 0.044262 c
1.237835 0.000000 l
1.684031 0.811458 1.842359 1.755700 1.712818 2.832726 c
1.712818 3.319600 1.525704 3.880244 1.223441 4.308103 c
1.021933 4.558918 0.820426 4.750716 0.618918 4.942515 c
0.273475 5.281853 l
0.273475 5.222837 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.314453 13.229515 cm
/Pattern cs
/P25 scn
1.396160 1.672193 m
0.935571 1.495148 0.503769 1.082042 0.244688 0.565660 c
0.000000 0.314845 l
0.215901 0.329599 l
0.374229 0.344353 0.532556 0.344353 0.676490 0.211569 c
0.719671 0.167307 l
0.748457 0.211569 l
0.964358 0.639428 1.281013 1.023026 1.741603 1.347610 c
2.720355 1.908253 3.943795 1.923007 5.095268 1.406625 c
5.138449 1.480394 l
4.159697 2.085299 2.763535 2.159068 1.396160 1.672193 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.420898 9.276817 cm
/Pattern cs
/P26 scn
4.562715 1.833157 m
3.756684 0.638100 2.346128 0.092209 0.892392 0.402039 c
0.633310 0.475808 0.345442 0.564331 0.028786 0.697115 c
0.000000 0.608592 l
0.273475 0.475808 0.561343 0.387285 0.877999 0.313516 c
1.914325 0.018441 2.749144 0.018441 3.540782 0.298763 c
4.318027 0.593839 4.821797 1.139729 4.936944 1.788895 c
4.936944 1.833157 l
4.893764 1.833157 l
4.778616 1.847911 l
4.692256 1.877418 4.605896 1.892172 4.562715 1.833157 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 9.974609 11.641136 cm
/Pattern cs
/P27 scn
2.504454 2.168804 m
1.453735 1.888482 0.503770 1.121286 0.000000 0.162289 c
0.071967 0.118028 l
0.647704 1.136039 1.626456 1.785206 2.777930 1.903236 c
3.555174 1.932744 4.145305 1.755698 4.533927 1.372100 c
4.562714 1.342592 l
4.591500 1.372100 l
4.706647 1.519638 4.807403 1.652422 4.965730 1.755698 c
5.023303 1.785206 l
4.965730 1.814714 l
4.260452 2.286835 3.382453 2.404865 2.504454 2.168804 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.947754 10.564102 cm
/Pattern cs
/P28 scn
0.575737 0.944244 m
0.546950 0.958997 l
0.000000 0.604907 l
0.057573 0.575399 l
0.690884 0.147539 1.453736 0.029509 2.230981 0.206554 c
3.324882 0.457369 4.389994 1.283581 5.052092 2.360607 c
4.980124 2.404869 l
3.986978 0.929490 2.058260 0.000001 0.575737 0.944244 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 14.825195 12.777161 cm
/Pattern cs
/P29 scn
0.000000 5.149070 m
0.993146 4.485150 1.626457 3.511401 1.770391 2.419621 c
1.770391 2.345852 1.784784 2.272083 1.784784 2.198314 c
1.784784 1.873731 1.727210 1.563902 1.655243 1.239319 c
1.597669 0.958997 1.540096 0.678675 1.511309 0.368845 c
1.525702 0.398353 l
1.482522 0.339338 1.540095 0.295077 1.612062 0.236062 c
1.669636 0.191801 1.727210 0.132785 1.755996 0.088524 c
1.799177 0.000001 l
1.842358 0.073770 l
2.187800 0.826213 2.288554 1.578656 2.130226 2.301591 c
1.943112 3.437632 1.237834 4.426135 0.043181 5.222839 c
0.000000 5.149070 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.832031 6.713367 cm
/Pattern cs
/P30 scn
0.546950 5.045794 m
0.187115 4.603180 0.000000 4.027783 0.000000 3.408124 c
0.000000 3.009772 0.071967 2.596666 0.230294 2.198314 c
0.546950 1.519640 1.036326 0.885228 1.669636 0.354092 c
1.827964 0.206554 1.971899 0.088523 2.115833 0.000001 c
2.159013 0.073770 l
2.015079 0.177046 1.871145 0.295076 1.727210 0.427861 c
0.949966 1.136042 0.474983 2.154053 0.474983 3.068787 c
0.474983 3.599923 0.618917 4.086798 0.921179 4.514657 c
0.935572 4.544165 l
0.590130 5.104809 l
0.546950 5.045794 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.241211 13.002533 cm
/Pattern cs
/P31 scn
0.000000 2.887676 m
0.028788 2.813907 l
1.079507 3.049968 2.259767 2.813907 3.094586 2.194248 c
3.454421 1.899173 3.684716 1.486067 3.900617 1.102468 c
4.015765 0.910669 4.130912 0.704116 4.260453 0.512317 c
4.289239 0.438548 4.375600 0.438548 4.461961 0.453302 c
4.519535 0.453302 4.577108 0.453302 4.620288 0.453302 c
4.721043 0.438548 l
4.663469 0.527071 l
4.562715 0.674609 4.548321 0.836900 4.533928 1.013946 c
3.771076 2.695877 1.684030 3.551596 0.000000 2.887676 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.055664 8.424809 cm
/Pattern cs
/P32 scn
0.043181 2.685188 m
0.000000 2.685188 l
0.014393 2.640927 l
0.201508 1.519640 1.194654 0.560644 2.432489 0.295076 c
2.547637 0.280322 2.633997 0.265569 2.734751 0.236061 c
2.835505 0.221308 2.936259 0.191800 3.037012 0.177046 c
3.655930 0.132785 4.174094 0.177046 4.605897 0.295076 c
4.591503 0.368845 l
3.037013 0.000000 0.993146 0.796705 0.575737 2.552405 c
0.561344 2.581912 l
0.532557 2.581912 l
0.460590 2.567158 0.388623 2.596666 0.316656 2.626173 c
0.215902 2.670435 0.143935 2.685188 0.043181 2.685188 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.552246 11.803394 cm
/Pattern cs
/P33 scn
2.259767 4.927764 m
2.331734 4.617934 2.374915 4.293351 2.374915 3.968768 c
2.374915 3.201571 2.173407 2.419621 1.784785 1.829469 c
1.381769 1.209811 0.806032 0.826212 0.143934 0.722936 c
0.115148 0.722936 l
0.115148 0.693429 l
0.100754 0.649167 0.100754 0.604906 0.100754 0.545891 c
0.100754 0.442614 0.115147 0.339338 0.158327 0.250815 c
0.158327 0.236061 l
0.158327 0.177046 0.129540 0.147538 0.100754 0.103277 c
0.000000 0.000001 l
0.129541 0.044261 l
0.949966 0.295076 1.640849 0.899981 2.072652 1.755701 c
2.576422 2.744204 2.677176 3.939260 2.331734 4.957272 c
2.259767 4.927764 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.802246 7.923180 cm
/Pattern cs
/P34 scn
2.504454 4.794977 m
1.784783 4.721208 1.137080 4.263841 0.575737 3.452383 c
0.201508 2.862232 0.000000 2.154051 0.000000 1.327839 c
0.000000 1.106533 0.014394 0.870473 0.043181 0.604905 c
0.057574 0.368845 0.100754 0.177044 0.143934 -0.000001 c
0.215901 0.014754 l
0.172721 0.206553 0.143935 0.413105 0.115148 0.604905 c
0.115148 0.649165 l
0.115148 0.929487 l
0.115148 2.301589 0.921178 3.880243 2.446880 4.219580 c
2.475667 4.234334 l
2.475667 4.308103 l
2.475667 4.367117 2.490061 4.440886 2.518847 4.499901 c
2.533241 4.573670 2.562028 4.647439 2.562028 4.721208 c
2.562028 4.809731 l
2.504454 4.794977 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.334473 10.270172 cm
/Pattern cs
/P35 scn
3.828650 2.167669 m
2.792324 2.138161 1.885538 1.710302 0.863605 0.766060 c
0.546950 0.559507 0.273475 0.308693 0.000000 0.072632 c
0.057573 0.013618 l
1.065112 0.854583 2.374914 1.400473 3.972584 1.666041 c
4.058945 1.680794 l
3.986977 1.739810 l
3.958191 1.769317 3.943797 1.843086 3.972584 1.961116 c
3.972584 2.049639 3.958191 2.182422 3.828650 2.167669 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.581055 12.305031 cm
/Pattern cs
/P36 scn
1.309803 0.781953 m
1.180262 0.767200 1.093901 0.737692 0.964360 0.693430 c
0.820426 0.649169 l
0.719672 0.619662 0.618918 0.619661 0.518164 0.619661 c
0.345443 0.619661 0.172721 0.604908 0.057574 0.472124 c
0.028787 0.427862 0.000000 0.368848 0.000000 0.295079 c
0.000000 0.250818 0.000001 0.206556 0.014394 0.162295 c
0.043181 0.088526 0.086361 0.029511 0.143934 0.014757 c
1.396163 0.000003 2.374917 0.811461 3.324883 1.593411 c
3.972587 2.109793 l
3.929407 2.168808 l
3.224129 1.622918 2.389310 1.180305 1.309803 0.781953 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.329102 7.082188 cm
/Pattern cs
/P37 scn
0.575737 4.057291 m
0.489376 4.042537 0.388622 4.027783 0.302261 4.013030 c
0.215901 3.998276 0.115148 3.968768 0.043181 3.968768 c
0.000000 3.968768 l
0.000000 3.924507 l
0.201508 2.316344 1.194653 0.988504 2.043864 0.000000 c
2.115831 0.044262 l
1.885537 0.427860 l
1.684029 0.752444 1.468128 1.077027 1.352981 1.475379 c
1.352981 1.460625 l
1.352981 1.519640 1.309801 1.563901 1.266621 1.593409 c
1.237834 1.622916 1.209047 1.637670 1.209047 1.667178 c
1.151473 1.844223 l
1.065113 2.095038 0.978752 2.316344 0.949965 2.596666 c
0.935572 2.685189 0.892392 2.773712 0.863605 2.847481 c
0.820425 2.921249 0.791638 2.980265 0.777245 3.054034 c
0.762851 3.231079 0.734064 3.393371 0.705277 3.540908 c
0.676491 3.703200 0.647704 3.865492 0.633310 4.027783 c
0.633310 4.072044 l
0.575737 4.057291 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.328125 13.485336 cm
/Pattern cs
/P38 scn
0.000000 4.042532 m
0.762851 3.009768 1.309802 1.770450 1.784785 0.044258 c
1.799178 -0.000004 l
1.842359 0.014750 l
1.885539 0.029504 1.943112 0.044258 2.000686 0.044258 c
2.115834 0.059011 2.245374 0.059011 2.274161 0.177042 c
2.101440 1.608158 1.352982 2.921245 0.057574 4.101547 c
0.000000 4.042532 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.212891 7.170727 cm
/Pattern cs
/P39 scn
1.266621 4.411380 m
0.359835 3.068786 0.143934 1.504885 0.000000 0.014754 c
0.086360 0.000000 l
0.359836 1.711438 0.921179 3.054032 1.741605 4.013028 c
1.770392 4.042535 l
1.295409 4.440887 l
1.266621 4.411380 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.991211 13.086998 cm
/Pattern cs
/P40 scn
1.511312 4.529411 m
1.468131 4.426134 1.468132 4.322858 1.468132 4.219582 c
1.468132 4.145813 1.482525 4.057290 1.482525 3.983521 c
1.309804 2.817972 0.878001 1.888485 0.331050 0.811459 c
0.000000 0.398353 l
0.057574 0.383599 l
0.230295 0.324584 0.359836 0.206553 0.446197 0.059016 c
0.489377 0.000001 l
0.518164 0.059016 l
1.137082 1.254072 1.813574 2.832726 1.597672 4.529411 c
1.568886 4.676949 l
1.511312 4.529411 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.293457 10.077229 cm
/Pattern cs
/P41 scn
0.316656 1.785209 m
0.000000 1.386857 l
0.014394 1.357349 l
0.431803 0.781952 1.180261 0.575399 1.827964 0.398354 c
1.943111 0.368846 l
2.590814 0.177047 3.152159 0.073770 3.727895 0.044263 c
3.756682 0.029509 l
3.886222 0.000002 4.058944 0.014755 4.231665 0.029509 c
4.231665 0.118032 l
4.073337 0.103278 3.915009 0.118032 3.756682 0.118032 c
2.619602 0.486876 1.410555 0.914736 0.388623 1.785209 c
0.359835 1.814716 l
0.316656 1.785209 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.363281 12.880440 cm
/Pattern cs
/P42 scn
0.000000 1.637672 m
0.057574 1.622918 0.115147 1.593411 0.172721 1.578657 c
0.230294 1.549150 0.287869 1.519642 0.359836 1.504888 c
1.597670 1.372104 2.720358 0.914737 4.001373 0.029510 c
4.044553 0.000002 l
4.058946 0.059018 l
4.073339 0.147540 4.246061 0.250817 4.303635 0.280324 c
4.346814 0.295078 l
4.318028 0.339339 l
3.483209 1.490134 2.115834 1.578657 0.777245 1.667180 c
0.000000 1.711441 l
0.000000 1.637672 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.219238 13.057602 cm
/Pattern cs
/P43 scn
0.000000 1.076894 m
0.043181 1.003125 l
0.777245 1.534261 1.684030 1.770322 2.533242 1.652291 c
3.583962 1.504754 4.332420 1.003125 4.591502 0.250682 c
4.605895 0.206421 l
5.124058 0.516250 l
5.109665 0.545758 l
4.821796 1.150663 4.318027 1.563769 3.569569 1.829337 c
2.418095 2.183428 1.050720 1.888352 0.000000 1.076894 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.631348 9.378582 cm
/Pattern cs
/P44 scn
0.172722 1.760902 m
0.129541 1.731394 0.100754 1.701887 0.071967 1.701887 c
0.000000 1.701887 l
0.043181 1.642872 l
1.137080 0.019955 3.425632 0.078970 5.008907 1.067474 c
4.965729 1.141243 l
4.389992 0.816659 3.785467 0.639614 3.180944 0.610106 c
2.187799 0.669122 1.252227 1.052720 0.345442 1.819917 c
0.287868 1.849425 0.230295 1.805163 0.172722 1.760902 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 12.902344 7.082214 cm
/Pattern cs
/P45 scn
1.303980 5.134313 m
-0.164149 4.027779 -0.437624 1.622914 0.713850 -0.000002 c
0.785817 0.044260 l
0.267653 0.885225 0.094933 1.991758 0.339621 2.936000 c
0.526735 3.673689 0.958538 4.249086 1.591848 4.573669 c
1.635029 4.588423 l
1.534275 4.735960 l
1.447915 4.853991 1.390341 4.942513 1.404734 5.090051 c
1.419128 5.178574 l
1.303980 5.134313 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.494629 12.378815 cm
/Pattern cs
/P46 scn
0.618915 5.281856 m
0.791635 5.060549 0.935569 4.839242 1.050716 4.573674 c
1.079502 4.440890 l
1.079502 4.204830 1.122682 3.968769 1.165862 3.747463 c
1.209042 3.511402 1.252223 3.275342 1.252223 3.039281 c
1.237829 2.817975 l
1.093895 2.065532 0.834815 1.136044 0.043181 0.649169 c
0.000000 0.619661 l
0.043181 0.575399 l
0.129541 0.501631 0.187114 0.383600 0.187114 0.250816 c
0.187114 0.206555 0.172720 0.162294 0.158327 0.118032 c
0.115147 0.000002 l
0.215900 0.059017 l
1.050715 0.604907 1.554483 1.637672 1.554483 2.832728 c
1.540090 3.083542 l
1.439337 3.703201 1.309796 4.175322 1.122683 4.588428 c
1.050716 4.853996 0.863602 5.075303 0.705275 5.281856 c
0.676489 5.311363 l
0.618915 5.281856 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.449707 9.490372 cm
/Pattern cs
/P47 scn
0.000000 0.498327 m
0.071967 0.468819 l
0.532557 2.062227 2.115833 3.567113 3.886224 3.183515 c
3.943797 3.168761 l
3.943797 3.227776 l
3.943797 3.301545 3.972584 3.345806 4.015765 3.404821 c
4.058945 3.463836 4.116518 3.537605 4.116518 3.640882 c
4.116518 3.670389 l
4.087732 3.670389 l
2.015079 4.231033 0.417409 2.106489 0.000000 0.498327 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.437500 11.419819 cm
/Pattern cs
/P48 scn
2.302946 1.106534 m
1.655242 0.678675 0.949965 0.545891 0.273475 0.722936 c
0.215901 0.737690 l
0.215901 0.678675 l
0.230295 0.501629 0.158328 0.368845 0.100755 0.221308 c
0.000000 0.000001 l
0.071967 0.014755 l
0.474983 0.044262 l
0.748458 0.059016 1.021933 0.088524 1.324195 0.147539 c
1.827964 0.295077 2.317339 0.604906 2.619601 0.988504 c
3.382451 1.726193 3.843040 2.567159 3.986974 3.481893 c
3.915008 3.496647 l
3.713500 2.537651 3.094584 1.622917 2.302946 1.106534 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 14.580566 7.244503 cm
/Pattern cs
/P49 scn
0.028786 4.116303 m
0.028786 4.116303 0.057573 3.880242 0.057573 3.865489 c
0.014393 3.688443 0.000000 3.511398 0.000000 3.334353 c
0.000000 2.950755 0.086360 2.567156 0.259081 2.257327 c
1.007539 0.988502 2.130226 0.147536 3.252912 -0.000001 c
3.267305 0.073768 l
2.058258 0.413104 1.122686 1.224562 0.705277 2.286834 c
0.561342 2.847478 0.532556 3.349106 0.633309 3.821227 c
0.647704 3.880243 l
0.590130 3.880243 l
0.403015 3.865489 0.287868 3.968765 0.172721 4.086795 c
0.014393 4.234333 l
0.028786 4.116303 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.025879 13.323036 cm
/Pattern cs
/P50 scn
0.000000 4.072044 m
0.331049 3.954014 0.618917 3.835984 0.877998 3.717953 c
2.087045 3.054033 2.821109 1.873731 2.821109 0.531137 c
2.806716 0.250815 l
2.821110 0.162292 2.878683 0.132785 2.950650 0.088523 c
3.080191 0.000001 l
3.108978 0.029509 l
3.252912 0.280323 3.310486 0.545891 3.310486 0.855720 c
3.310486 1.254072 3.180945 1.681932 2.950650 2.095038 c
2.518848 2.817973 1.871145 3.349109 0.906786 3.791722 c
0.618917 3.939260 0.331048 4.072044 0.014393 4.145813 c
0.000000 4.072044 l
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.491699 11.818153 cm
/Pattern cs
/P51 scn
0.065991 4.440887 m
-0.293845 2.552403 0.843235 0.236059 2.858314 -0.000001 c
2.800741 0.177044 2.800741 0.368843 2.800741 0.545889 c
2.153038 0.486873 1.548514 0.855718 1.073531 1.283578 c
0.253106 2.124543 -0.106730 3.290092 0.065991 4.440887 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.687500 11.877132 cm
/Pattern cs
/P52 scn
0.604524 1.268826 m
0.964360 0.767198 1.612064 0.132785 2.605209 0.000001 c
2.562029 0.147539 2.562029 0.309830 2.562029 0.457368 c
2.015079 0.427861 1.439342 0.663921 0.849212 1.195057 c
0.460590 1.593409 0.172721 2.065531 0.000000 2.581913 c
0.129541 2.095038 0.331049 1.652425 0.604524 1.268826 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.609863 8.277248 cm
/Pattern cs
/P53 scn
2.734745 -0.000001 m
2.979433 1.888484 2.087043 4.322859 0.000000 4.573673 c
0.057574 4.396628 0.115147 4.204829 0.172720 4.027783 c
2.015075 3.776969 2.849892 1.711439 2.734745 -0.000001 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.667480 9.634567 cm
/Pattern cs
/P54 scn
0.000000 3.157310 m
0.000000 3.157310 0.129541 2.744204 0.143934 2.699943 c
1.511310 2.508144 2.331735 1.327841 2.619604 0.000001 c
2.504457 0.781951 2.216588 1.504887 1.799179 2.065530 c
1.324196 2.685189 0.705278 3.068788 0.000000 3.157310 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.500000 8.218193 cm
/Pattern cs
/P55 scn
0.000000 0.118030 m
1.194654 0.000000 2.432488 0.177046 3.382454 1.032765 c
3.972584 1.519640 4.332419 2.183560 4.505140 2.921249 c
4.389993 2.862234 4.145305 2.921249 4.145305 2.862234 c
3.727896 2.257329 3.555176 1.578655 3.080193 1.091780 c
2.259768 0.309829 1.122687 0.000000 0.000000 0.118030 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.212891 8.469028 cm
/Pattern cs
/P56 scn
2.576422 2.596663 m
2.547635 2.596663 2.490062 2.596663 2.475668 2.596663 c
2.302947 2.345849 2.173406 2.095035 2.058259 1.844221 c
1.871144 1.475376 1.698423 1.121286 1.410555 0.826210 c
1.007539 0.442612 0.532557 0.177044 0.000000 -0.000001 c
0.647704 0.132783 1.194654 0.413104 1.655244 0.826210 c
2.187800 1.268823 2.562029 1.873729 2.749144 2.626171 c
2.691570 2.611417 2.633996 2.596663 2.576422 2.596663 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.012207 13.286499 cm
/Pattern cs
/P57 scn
4.274842 3.031552 m
3.324877 3.090568 2.374912 2.972537 1.482521 2.544677 c
0.647703 2.057803 0.000000 1.202084 0.000000 0.169319 c
0.172721 0.228334 0.359835 0.287349 0.532556 0.346364 c
0.647703 2.175833 2.605207 3.223351 4.274842 3.031552 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.055176 13.514824 cm
/Pattern cs
/P58 scn
1.453735 2.286833 m
0.561343 1.755697 0.014393 0.914731 0.000000 -0.000003 c
0.043180 0.014751 0.417410 0.147535 0.460590 0.162289 c
0.561344 1.431114 1.496915 2.286833 2.605207 2.655678 c
2.187799 2.567155 1.813570 2.449125 1.453735 2.286833 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.017578 10.047688 cm
/Pattern cs
/P59 scn
0.000000 2.257328 m
0.892392 0.678675 3.037013 0.000001 4.634683 0.796705 c
4.749830 0.914735 4.879370 1.047518 5.052092 1.106533 c
4.936944 1.165549 4.807404 1.357348 4.749830 1.283579 c
4.102126 1.091780 3.497602 0.722936 2.792324 0.722936 c
1.727211 0.796705 0.647704 1.401609 0.000000 2.257328 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.377441 10.180458 cm
/Pattern cs
/P60 scn
4.246059 0.693427 m
4.346814 0.796704 4.461961 0.899980 4.605895 0.973748 c
4.577108 0.988502 4.548322 1.018010 4.519535 1.047517 c
4.490748 1.077025 4.433175 1.121286 4.418781 1.121286 c
4.404387 1.121286 l
4.389994 1.121286 l
4.174092 1.062271 3.958191 0.973748 3.756683 0.899980 c
3.339274 0.737688 2.907472 0.575397 2.418095 0.575397 c
1.554490 0.619659 0.662097 1.032763 0.000000 1.667175 c
1.021933 0.442613 2.835504 0.000000 4.246059 0.693427 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.962402 12.141586 cm
/Pattern cs
/P61 scn
4.922553 0.222422 m
4.620291 0.650282 4.202881 1.019127 3.799865 1.314202 c
3.627144 1.432232 3.440030 1.491247 3.267309 1.624031 c
2.259769 2.169921 0.892393 2.169921 0.000000 1.373217 c
0.115147 1.255187 0.302262 1.255187 0.417410 1.122403 c
1.842359 2.228937 3.915013 1.565016 4.922553 0.222422 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.019531 13.099648 cm
/Pattern cs
/P62 scn
0.000000 0.415162 m
0.043180 0.385654 0.100754 0.356147 0.158328 0.326639 c
0.230295 0.297132 0.287868 0.267624 0.345441 0.223363 c
1.396162 1.020067 2.806718 0.857775 3.871832 0.193855 c
3.814258 0.238117 3.771079 0.282378 3.713506 0.326639 c
3.627145 0.385654 3.540784 0.429916 3.454423 0.474177 c
3.368063 0.518438 3.267308 0.562700 3.180947 0.636469 c
2.130226 1.197112 0.820426 1.108590 0.000000 0.415162 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.357422 6.698551 cm
/Pattern cs
/P63 scn
0.000000 0.000000 m
1.597669 1.032765 2.432487 3.467139 1.309801 5.178577 c
1.309801 5.119562 1.309801 5.060547 1.252227 5.001532 c
1.137080 4.942517 1.007540 4.824487 0.949966 4.691703 c
2.202193 3.290093 1.367374 1.032765 0.000000 0.000000 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.177734 7.465775 cm
/Pattern cs
/P64 scn
0.460588 4.190073 m
0.345441 4.131057 0.244687 4.027781 0.187113 3.924505 c
0.590129 3.467137 0.791637 2.891740 0.791637 2.257327 c
0.791637 2.154051 0.791637 2.065528 0.777244 1.962252 c
0.719670 1.283578 0.417408 0.590150 0.000000 -0.000001 c
0.446195 0.531135 0.762849 1.165548 0.906783 1.858975 c
0.964357 2.109789 0.978750 2.360604 0.978750 2.611418 c
0.978750 3.216323 0.820423 3.791720 0.518162 4.278595 c
0.503769 4.263841 0.489375 4.234334 0.460588 4.190073 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.688965 12.791885 cm
/Pattern cs
/P65 scn
1.798020 5.178574 m
0.905627 4.440885 0.128381 3.467135 0.013233 2.257325 c
-0.044341 1.460621 0.070807 0.619656 0.660938 -0.000003 c
0.776086 0.118027 0.776086 0.309826 0.905627 0.427856 c
-0.231455 1.888481 0.373070 4.131055 1.798020 5.178574 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.730957 12.850891 cm
/Pattern cs
/P66 scn
0.014393 2.183559 m
0.000000 1.829468 l
0.000000 1.062272 0.215901 0.442613 0.618918 -0.000001 c
0.647705 0.044261 0.676493 0.103276 0.705279 0.162291 c
0.734066 0.236060 0.762853 0.295075 0.806033 0.354090 c
0.431803 0.855719 0.230295 1.475378 0.230295 2.154052 c
0.230295 2.758957 0.388623 3.363862 0.690885 3.909752 c
0.302262 3.363862 0.071967 2.788464 0.014393 2.183559 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 12.752441 13.042702 cm
/Pattern cs
/P67 scn
0.000000 4.131058 m
0.302262 2.670434 1.065114 1.386854 2.015081 0.295075 c
1.957508 0.295075 1.899934 0.236060 1.842360 0.118030 c
1.784787 0.059014 1.727212 -0.000001 1.669639 0.059014 c
0.777245 0.855718 0.417410 1.888483 0.244689 3.039278 c
0.115148 3.393369 0.057574 3.762213 0.000000 4.131058 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.025879 13.101685 cm
/Pattern cs
/P68 scn
0.000000 2.995018 m
0.215901 1.622917 0.647704 0.708183 1.410556 0.029509 c
1.439343 0.000001 1.453735 0.014755 1.525702 0.088524 c
1.568883 0.177047 1.612063 0.236062 1.669637 0.265569 c
0.906785 1.150796 0.345442 2.065530 0.000000 2.995018 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.120605 7.314476 cm
/Pattern cs
/P69 scn
1.971897 0.048002 m
1.741603 1.021751 1.324194 1.936486 0.777245 2.851220 c
0.662097 2.969250 0.604524 3.102034 0.474983 3.279079 c
0.302262 3.529894 0.000000 3.647924 0.000000 3.883985 c
0.000000 4.002015 0.172721 4.193813 0.302261 4.134799 c
1.496915 3.161049 1.626455 1.508626 1.971897 0.048002 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.178223 8.336227 cm
/Pattern cs
/P70 scn
0.129541 3.054032 m
0.057574 3.009771 0.000000 2.921248 0.000000 2.862233 c
0.000000 2.729449 0.115147 2.626172 0.230294 2.522895 c
0.316655 2.449126 0.388621 2.375358 0.460588 2.286835 c
0.546949 2.154051 l
0.618915 2.050774 0.676489 1.962252 0.748456 1.873729 c
1.137078 1.209809 1.439340 0.590149 1.655241 -0.000002 c
1.410553 1.165547 1.137079 2.345850 0.215901 3.098293 c
0.201508 3.098293 0.143934 3.068786 0.129541 3.054032 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.178223 12.983673 cm
/Pattern cs
/P71 scn
4.001369 2.124542 m
3.526387 1.947497 2.993830 1.814713 2.518847 1.519637 c
2.461273 1.460622 2.346126 1.519637 2.274159 1.460622 c
1.971898 1.283577 1.741604 1.150793 1.496916 0.914732 c
1.381768 0.796702 1.194654 0.796702 1.079506 0.663918 c
0.834818 0.413104 0.604524 0.236058 0.359835 -0.000002 c
0.244688 0.118028 0.115147 0.309827 0.000000 0.427857 c
1.093900 1.445868 2.576421 1.873728 4.001369 2.124542 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.250000 13.042671 cm
/Pattern cs
/P72 scn
0.000000 0.354094 m
0.057574 0.295079 0.100754 0.236063 0.158327 0.177048 c
0.201507 0.118033 0.259081 0.044265 0.302261 0.000003 c
0.417408 0.103280 0.518163 0.206556 0.633310 0.309833 c
0.748457 0.413109 0.863604 0.516385 0.993145 0.649169 c
1.065112 0.722938 1.137079 0.752446 1.209046 0.781954 c
1.281013 0.811461 1.352979 0.840969 1.410553 0.899984 c
1.612060 1.106537 1.813568 1.224567 2.043863 1.372105 c
2.187798 1.460627 l
2.173403 1.460627 l
2.216583 1.504889 2.274157 1.504889 2.317337 1.504889 c
2.360518 1.504889 2.389305 1.504889 2.403699 1.519643 c
2.720353 1.726195 3.051400 1.844226 3.382448 1.947502 c
2.274156 1.681934 0.978751 1.283582 0.000000 0.354094 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.607910 9.619808 cm
/Pattern cs
/P73 scn
0.000000 -0.000000 m
1.424948 0.368844 2.677176 1.091779 3.857437 1.947498 c
3.915010 1.829468 4.159698 1.696684 4.102124 1.578654 c
2.979438 0.486874 1.482522 0.059015 0.000000 -0.000000 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.010742 9.693565 cm
/Pattern cs
/P74 scn
0.000000 0.000000 m
1.511309 0.132784 2.749143 0.649166 3.670321 1.534392 c
3.670321 1.549146 l
3.670321 1.593408 3.627141 1.637669 3.555174 1.711438 c
3.511993 1.740945 3.483207 1.785206 3.454420 1.829468 c
2.173406 0.914734 1.093900 0.339337 0.000000 0.000000 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.185059 13.514801 cm
/Pattern cs
/P75 scn
1.727211 4.204826 m
1.007540 2.921248 0.474983 1.460624 0.532556 -0.000000 c
0.359835 -0.000000 0.172721 -0.000000 0.000000 -0.000000 c
0.115147 1.593408 0.892392 2.921248 1.727211 4.204826 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.228027 13.559052 cm
/Pattern cs
/P76 scn
0.000000 -0.000000 m
0.071967 -0.000000 0.388622 -0.000000 0.446195 -0.000000 c
0.446195 0.059015 0.446195 0.118030 0.446195 0.177045 c
0.446195 1.180303 0.719670 2.257329 1.237833 3.378616 c
0.633310 2.375359 0.115147 1.268825 0.000000 -0.000000 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.817383 6.875599 cm
/Pattern cs
/P77 scn
0.000000 -0.000000 m
0.057574 0.177045 0.172721 0.309829 0.302262 0.427859 c
0.892393 1.460623 1.137082 2.493387 1.367377 3.658935 c
1.367377 3.835980 1.367377 3.968764 1.367377 4.145809 c
1.540098 4.086794 1.727213 4.086794 1.899934 4.145809 c
1.612065 2.626171 1.137082 1.106532 0.000000 -0.000000 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 14.177246 7.332970 cm
/Pattern cs
/P78 scn
1.050719 3.201573 m
0.806031 2.006517 0.575736 1.003259 0.000000 0.000002 c
0.892391 1.091782 1.266620 2.493392 1.496915 3.629433 c
1.352981 3.585171 1.194654 3.585171 1.050719 3.629433 c
1.050719 3.555664 1.050719 3.201573 1.050719 3.201573 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.667480 10.581905 cm
/Pattern cs
/P79 scn
4.044552 0.129677 m
3.929404 0.247707 3.799864 0.380491 3.684716 0.439507 c
2.490062 0.926381 1.309802 1.354241 0.000000 1.354241 c
0.000000 1.531286 0.000000 1.664070 0.000000 1.841116 c
0.719671 2.018161 1.424949 1.664071 2.087047 1.354241 c
2.792325 1.044412 3.454422 0.690320 4.044552 0.129677 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.710449 11.090263 cm
/Pattern cs
/P80 scn
0.000000 1.303256 m
0.000000 1.244241 0.000000 0.949165 0.000000 0.890150 c
1.209048 0.875396 2.302948 0.521306 3.324881 0.108200 c
2.950652 0.373768 2.533242 0.595075 2.029473 0.816381 c
1.914325 0.875396 l
1.295407 1.155718 0.647704 1.450793 0.000000 1.303256 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.132812 11.759079 cm
/Pattern cs
/P81 scn
0.000000 2.124542 m
0.115147 2.065527 0.244688 2.065527 0.359835 2.006512 c
1.554489 1.209808 2.792323 0.914733 4.102124 0.781949 c
4.044551 0.663919 4.159698 0.413104 4.159698 0.413104 c
2.562029 -0.000001 1.252227 1.268823 0.000000 2.124542 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.363281 11.891888 cm
/Pattern cs
/P82 scn
0.417410 1.578653 m
1.482523 0.796702 2.576424 -0.000001 3.871832 0.324582 c
3.843045 0.383597 3.814258 0.486873 3.814258 0.575396 c
3.814258 0.590150 3.814258 0.604903 3.828651 0.619657 c
2.302948 0.767195 1.151474 1.136039 0.100754 1.829467 c
0.071967 1.844221 0.043180 1.858974 0.000000 1.858974 c
0.187115 1.740944 0.417410 1.578653 0.417410 1.578653 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.305664 11.124729 cm
/Pattern cs
/P83 scn
0.000000 3.186817 m
0.244688 2.331098 0.777245 1.549147 1.540096 1.047519 c
2.317340 0.560644 3.267304 0.309830 4.030155 0.796705 c
4.087729 0.619659 4.145303 0.486875 4.202877 0.309830 c
3.555173 0.000000 2.893075 0.059016 2.245372 0.309830 c
1.137079 0.811458 0.302262 1.962253 0.000000 3.186817 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.881348 11.228027 cm
/Pattern cs
/P84 scn
1.698425 0.265568 m
2.403702 0.000000 3.022619 -0.000000 3.598356 0.250814 c
3.583963 0.309829 3.468815 0.590151 3.454422 0.663920 c
2.777931 0.265568 1.871146 0.354091 0.964360 0.929489 c
0.590131 1.165549 0.273475 1.475378 0.000000 1.844223 c
0.417409 1.121288 1.007540 0.560644 1.698425 0.265568 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.451660 9.979801 cm
/Pattern cs
/P85 scn
4.145304 0.436752 m
3.900616 1.041657 3.555172 1.587547 3.080190 2.015407 c
2.187798 2.679327 1.180259 2.930141 0.115147 2.930141 c
0.057573 2.930141 0.057574 3.107187 0.000000 3.180956 c
1.827964 3.726846 3.540781 2.133437 4.145304 0.436752 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.494629 11.499763 cm
/Pattern cs
/P86 scn
0.000000 1.631488 m
0.014393 1.601980 0.028788 1.572473 0.028788 1.542966 c
0.043181 1.513458 0.043181 1.469196 0.057574 1.454443 c
1.252230 1.454443 2.216590 1.159367 3.051410 0.539708 c
3.152164 0.451185 3.238524 0.362663 3.324884 0.259386 c
2.518852 1.306905 1.281016 1.985579 0.000000 1.631488 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 14.500000 13.205025 cm
/Pattern cs
/P87 scn
2.772321 4.337608 m
1.174653 3.791718 -0.135147 1.962250 0.570130 0.250812 c
0.397409 0.191796 0.210296 0.191796 0.095149 -0.000003 c
-0.379834 1.903235 0.987539 3.850734 2.772321 4.337608 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 14.537109 13.308319 cm
/Pattern cs
/P88 scn
0.000000 0.663922 m
0.000000 0.442615 0.028787 0.221308 0.071967 0.000002 c
0.158327 0.088525 0.273474 0.132786 0.388621 0.162293 c
0.388621 0.162293 0.431803 0.177047 0.474983 0.191801 c
0.345442 0.501630 0.287868 0.826213 0.287868 1.150796 c
0.287868 1.534395 0.374228 1.917993 0.532555 2.301591 c
0.762850 2.832727 1.165866 3.319602 1.640848 3.688446 c
0.647703 2.980265 0.000000 1.829470 0.000000 0.663922 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.458008 7.067455 cm
/Pattern cs
/P89 scn
0.000000 0.000000 m
0.302262 0.059015 0.647704 0.118030 0.892392 0.368845 c
1.252228 0.796704 1.727211 1.032764 2.015080 1.519639 c
2.432489 2.316343 2.734751 3.157308 2.432490 4.013027 c
2.605211 4.013027 2.792325 4.131058 2.849899 4.322857 c
3.209735 3.231077 2.792325 2.006513 2.015080 1.150794 c
1.424949 0.604904 0.834819 0.177045 0.000000 0.000000 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 14.494141 7.510067 cm
/Pattern cs
/P90 scn
1.453734 3.540907 m
1.525701 3.319600 1.568880 3.083539 1.568880 2.847479 c
1.568880 2.154051 1.266620 1.490131 1.021932 1.047518 c
0.849211 0.752442 0.604523 0.545890 0.374229 0.354091 c
0.244689 0.250814 0.115147 0.132784 0.000000 -0.000000 c
0.302261 0.177045 0.618917 0.413105 0.964358 0.737689 c
1.568881 1.401609 1.914322 2.242574 1.914322 3.039278 c
1.914322 3.290092 1.871142 3.526153 1.813568 3.747459 c
1.727208 3.644183 1.597668 3.555661 1.453734 3.540907 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 12.622559 12.290298 cm
/Pattern cs
/P91 scn
0.417792 5.060547 m
-0.229913 3.481893 0.115530 1.283580 1.727594 0.427861 c
1.612446 0.309830 1.727594 0.118032 1.612447 0.000001 c
-0.229912 0.870474 -0.287486 3.422877 0.417792 5.060547 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 12.666016 12.349297 cm
/Pattern cs
/P92 scn
0.000000 2.921248 m
0.000000 1.740946 0.417409 0.545890 1.554489 0.000000 c
1.583276 0.044261 1.583276 0.103276 1.583276 0.162291 c
1.583276 0.221306 1.583276 0.295075 1.626456 0.368845 c
0.532557 0.973749 0.028786 2.198313 0.028786 3.408123 c
0.028786 3.452385 0.028786 3.481892 0.028786 3.526154 c
0.014393 3.319601 0.000000 3.113048 0.000000 2.921248 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.552246 7.126480 cm
/Pattern cs
/P93 scn
1.122689 -0.000002 m
1.899934 1.519637 1.597672 3.776964 0.000000 4.573668 c
0.172721 4.750714 0.172721 5.001528 0.244688 5.178574 c
0.546950 4.868744 0.834820 4.632684 1.137082 4.263839 c
1.439344 3.835980 1.612065 3.290090 1.612065 2.803215 c
1.727212 1.829466 1.597672 0.855717 1.122689 -0.000002 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.609863 8.528072 cm
/Pattern cs
/P94 scn
0.172720 3.599920 m
0.143933 3.467136 0.100754 3.304844 0.000000 3.172060 c
0.633309 2.847477 1.093897 2.286834 1.338585 1.534391 c
1.453732 1.165547 1.511306 0.767195 1.511306 0.354089 c
1.511306 0.236059 1.496913 0.118029 1.496913 -0.000001 c
1.525699 0.221305 1.554485 0.457365 1.554485 0.693426 c
1.554485 0.914732 1.540093 1.150793 1.511306 1.386853 c
1.511306 1.873728 1.338585 2.404864 1.036324 2.832723 c
0.834816 3.068784 0.647702 3.260583 0.446195 3.452382 c
0.446195 3.452382 0.273475 3.629427 0.201508 3.688442 c
0.187114 3.644181 0.172720 3.599920 0.172720 3.599920 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.429688 13.305824 cm
/Pattern cs
/P95 scn
4.980124 1.374590 m
3.915010 1.861465 2.662783 1.920480 1.597670 1.315575 c
1.180261 1.005745 0.820426 0.651654 0.590131 0.164780 c
0.417410 0.341825 0.172721 0.282810 0.000000 0.282810 c
0.057574 0.341825 0.115148 0.400840 0.172722 0.459855 c
0.403016 0.946730 0.820425 1.374590 1.295408 1.551636 c
2.490061 1.979495 3.915010 2.038510 4.980124 1.374590 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.516113 13.427101 cm
/Pattern cs
/P96 scn
1.223441 1.386081 m
0.777245 1.209035 0.359835 0.810684 0.115147 0.309056 c
0.115147 0.309056 0.014393 0.205779 0.000000 0.191025 c
0.143934 0.205779 0.331048 0.205779 0.474982 0.087749 c
0.690883 0.515608 1.021932 0.884452 1.468128 1.223789 c
2.216586 1.651649 3.108978 1.769679 3.986977 1.592633 c
3.180945 1.799186 2.202193 1.740171 1.223441 1.386081 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.435547 9.159218 cm
/Pattern cs
/P97 scn
0.000000 0.770476 m
1.540096 0.032787 3.511994 0.342616 4.577107 1.921269 c
4.634681 1.980284 4.749828 1.921269 4.879369 1.921269 c
4.764221 1.183581 4.159698 0.696707 3.511994 0.460647 c
2.317340 0.032788 1.122687 0.342617 0.000000 0.770476 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 12.061523 9.386086 cm
/Pattern cs
/P98 scn
2.979440 1.664894 m
2.302948 0.661638 1.194655 0.100994 0.000000 0.115748 c
0.690885 0.012472 1.295409 0.056733 1.871146 0.263286 c
2.605211 0.543608 3.080194 1.045236 3.195341 1.650140 c
3.152161 1.650140 3.108981 1.664894 3.108981 1.664894 c
3.051407 1.679648 2.993833 1.694402 2.979440 1.664894 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.003418 11.129826 cm
/Pattern cs
/P99 scn
0.000000 0.658798 m
0.892392 2.355483 3.195339 3.417754 4.908156 2.296467 c
4.749828 2.193191 4.634682 2.045653 4.519534 1.912869 c
4.044551 2.384990 3.368060 2.488266 2.734750 2.458759 c
1.568883 2.340729 0.575737 1.662055 0.000000 0.658798 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.241211 12.988091 cm
/Pattern cs
/P100 scn
1.252229 0.748044 m
0.806032 0.630014 0.374229 0.408707 0.000000 0.143139 c
0.446196 0.423461 0.949966 0.600506 1.496916 0.644768 c
2.288555 0.674275 2.878685 0.497230 3.281701 0.113631 c
3.368062 0.231661 3.468815 0.349692 3.598356 0.438215 c
2.734751 0.969351 1.856752 0.895582 1.252229 0.748044 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.020020 9.988689 cm
/Pattern cs
/P101 scn
4.936943 2.936001 m
3.958191 1.313086 1.770391 -0.000000 0.000000 1.165548 c
0.158328 1.268824 0.316655 1.372101 0.474982 1.475378 c
2.058258 0.472121 3.986978 1.549146 4.936943 2.936001 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.105957 10.667339 cm
/Pattern cs
/P102 scn
0.403015 0.752444 m
0.374228 0.737690 0.071967 0.531137 0.000000 0.486875 c
0.604524 0.103278 1.324194 0.000002 2.058259 0.162293 c
2.734749 0.324584 3.411240 0.708182 3.972584 1.224564 c
2.936258 0.398353 1.568882 0.014755 0.403015 0.752444 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 14.839355 12.865654 cm
/Pattern cs
/P103 scn
0.000000 5.104805 m
0.993146 4.426131 1.856752 3.481889 2.058260 2.198310 c
2.216588 1.431114 2.087047 0.678671 1.770392 -0.000003 c
1.712818 0.118027 1.496916 0.236057 1.525703 0.280318 c
1.583277 1.018007 1.856752 1.652420 1.784785 2.345848 c
1.640851 3.496643 0.949966 4.455638 0.000000 5.104805 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.134766 12.939423 cm
/Pattern cs
/P104 scn
0.546951 2.272078 m
0.561345 2.198309 0.561345 2.124540 0.561345 2.036018 c
0.561345 1.711435 0.489377 1.386852 0.431803 1.062268 c
0.374230 0.781946 0.316656 0.501625 0.302262 0.206549 c
0.302262 0.206549 0.302262 0.206549 0.302262 0.191795 c
0.316656 0.177042 0.345442 0.147534 0.374229 0.118026 c
0.417410 0.088519 0.460590 0.044258 0.489377 -0.000004 c
0.705279 0.486871 0.820427 0.973746 0.820427 1.460620 c
0.820427 1.681927 0.791640 1.888480 0.748460 2.109787 c
0.647706 2.714692 0.388623 3.275335 0.000000 3.791718 c
0.273475 3.334350 0.460591 2.817968 0.546951 2.272078 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.866699 6.742832 cm
/Pattern cs
/P105 scn
2.095755 0.000000 m
1.318511 0.575397 0.656414 1.283580 0.224611 2.183560 c
-0.120830 3.098294 -0.106437 4.190074 0.541266 4.986778 c
0.642020 4.824487 0.742773 4.662195 0.843527 4.499904 c
-0.192798 3.009772 0.685200 0.929488 2.095755 0.000000 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.903809 7.878876 cm
/Pattern cs
/P106 scn
0.000000 2.242573 m
0.000000 1.858974 0.071967 1.445869 0.215901 1.062270 c
0.388622 0.693426 0.618917 0.339336 0.892391 -0.000001 c
0.518163 0.590150 0.287868 1.254070 0.287868 1.888482 c
0.287868 2.434372 0.431802 2.921247 0.734063 3.363860 c
0.705276 3.393368 0.518163 3.703197 0.474982 3.776966 c
0.172721 3.349107 0.000000 2.817970 0.000000 2.242573 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.255859 13.022461 cm
/Pattern cs
/P107 scn
0.000000 2.838233 m
1.669637 3.487399 3.742290 2.616926 4.490748 0.964503 c
4.505141 0.787457 4.519535 0.625166 4.620289 0.462874 c
4.490748 0.492382 4.289240 0.433367 4.274847 0.507136 c
3.886224 1.067779 3.641535 1.746453 3.094585 2.203820 c
2.230980 2.852987 1.021933 3.074293 0.000000 2.838233 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.816895 13.288727 cm
/Pattern cs
/P108 scn
0.000000 2.689972 m
0.906786 2.748988 1.842358 2.498173 2.547636 1.981791 c
2.921865 1.671962 3.152159 1.258856 3.382454 0.860504 c
3.497601 0.668705 3.612749 0.462152 3.742289 0.270353 c
3.742289 0.255599 l
3.742289 0.240845 l
3.756683 0.226091 3.828650 0.226091 3.871830 0.226091 c
3.900617 0.226091 3.943797 0.226091 3.972584 0.226091 c
3.900617 0.373629 3.886224 0.521167 3.871830 0.668705 c
3.209733 2.144083 1.540096 2.970294 0.000000 2.689972 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.098633 8.367046 cm
/Pattern cs
/P109 scn
4.548319 0.397067 m
4.058943 0.264283 3.511992 0.249528 2.993829 0.279036 c
2.777928 0.293790 2.605208 0.367559 2.389307 0.382313 c
1.266620 0.618373 0.215901 1.503600 0.000000 2.683902 c
0.172721 2.698656 0.302261 2.580626 0.474982 2.610133 c
0.906784 0.839680 2.936256 0.013469 4.548319 0.397067 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.170410 8.675583 cm
/Pattern cs
/P110 scn
2.331736 0.118029 m
2.432490 0.103275 2.533243 0.088521 2.633997 0.059014 c
2.734751 0.044260 2.821113 0.014752 2.936260 -0.000001 c
2.993834 -0.000001 3.051408 -0.000001 3.108981 -0.000001 c
1.885539 0.191797 0.719671 0.973747 0.388622 2.257325 c
0.316655 2.257325 0.244688 2.272079 0.172721 2.301587 c
0.115147 2.316341 0.057574 2.331094 0.000000 2.345848 c
0.187115 1.268823 1.151474 0.368843 2.331736 0.118029 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.681641 11.877148 cm
/Pattern cs
/P111 scn
2.173406 4.853992 m
2.777929 3.009770 1.928718 0.590150 0.000000 -0.000001 c
0.043180 0.044261 0.071967 0.088522 0.071967 0.177045 c
0.014393 0.295075 -0.000000 0.472120 0.028786 0.604904 c
1.842357 0.885226 2.590815 3.172062 2.173406 4.853992 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.710938 11.980404 cm
/Pattern cs
/P112 scn
1.684031 1.608162 m
1.266622 0.973750 0.690884 0.575398 0.014393 0.472121 c
0.014393 0.442614 0.000000 0.398352 0.000000 0.368845 c
0.000000 0.280322 0.014394 0.177046 0.057574 0.103277 c
0.057574 0.088523 0.057574 0.088523 0.057574 0.073769 c
0.057574 0.044262 0.057574 0.014754 0.043181 0.000000 c
0.791639 0.265568 1.424950 0.840966 1.827966 1.637670 c
2.130228 2.227821 2.274160 2.891741 2.274160 3.555661 c
2.274160 3.585169 2.274160 3.614676 2.274160 3.644184 c
2.259767 2.891741 2.058260 2.168806 1.684031 1.608162 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.839844 7.923134 cm
/Pattern cs
/P113 scn
0.150046 -0.000001 m
-0.094642 1.150794 -0.094643 2.404866 0.567455 3.422877 c
1.013651 4.072043 1.632569 4.662194 2.467387 4.750717 c
2.481781 4.573672 2.366633 4.440887 2.395420 4.263842 c
0.610636 3.865490 -0.310543 1.726191 0.150046 -0.000001 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.903320 9.516544 cm
/Pattern cs
/P114 scn
0.546950 1.799960 m
0.215902 1.283578 0.028787 0.678673 0.000000 -0.000001 c
0.215901 1.195055 0.993145 2.390112 2.288552 2.699941 c
2.288552 2.773710 2.317339 2.847479 2.331733 2.921248 c
2.346126 2.980263 2.360519 3.039278 2.374912 3.098293 c
1.684029 3.024524 1.079506 2.581911 0.546950 1.799960 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.363281 10.300060 cm
/Pattern cs
/P115 scn
0.000000 0.013132 m
1.137080 0.957374 2.518848 1.444249 3.929404 1.680309 c
3.886223 1.724571 3.871829 1.798339 3.900616 1.931124 c
3.886223 2.019646 3.886223 2.108169 3.799862 2.093415 c
2.619602 2.063907 1.712817 1.488510 0.849212 0.706559 c
0.546950 0.500006 0.273475 0.249192 0.000000 0.013132 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.241211 10.951130 cm
/Pattern cs
/P116 scn
2.936259 1.398102 m
1.914326 1.368594 1.021933 0.940735 0.014393 0.011247 c
0.014393 0.011247 0.014393 0.011247 0.000000 0.011247 c
0.849212 0.498121 1.842359 0.852212 2.993833 1.044011 c
2.979439 1.073519 2.979439 1.103027 2.979439 1.132534 c
2.979439 1.176795 2.979439 1.221056 2.993833 1.265318 c
2.979439 1.383348 2.965045 1.412856 2.936259 1.398102 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.629395 12.349220 cm
/Pattern cs
/P117 scn
3.924776 2.095039 m
3.133138 1.490134 2.255140 1.047521 1.276387 0.693431 c
1.103666 0.678677 0.988519 0.619662 0.787011 0.560647 c
0.499143 0.486878 0.196881 0.590154 0.038554 0.398355 c
-0.033413 0.309833 -0.004627 0.044264 0.124914 0.014757 c
1.650616 0.000003 2.744516 1.195059 3.924776 2.095039 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.682129 12.393478 cm
/Pattern cs
/P118 scn
1.237833 0.619663 m
1.108292 0.604909 1.007538 0.575401 0.892391 0.531140 c
0.748457 0.486878 l
0.633310 0.457371 0.532556 0.457371 0.417409 0.457371 c
0.244688 0.457371 0.100753 0.442617 0.028786 0.339341 c
0.014393 0.309833 0.000000 0.265572 0.000000 0.206557 c
0.000000 0.177050 -0.000000 0.132788 0.014393 0.103281 c
0.028787 0.073773 0.043180 0.029511 0.086360 0.014758 c
1.266620 0.000004 2.202192 0.752447 3.108976 1.490135 c
2.562027 1.165552 1.957504 0.870477 1.237833 0.619663 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.372070 7.096889 cm
/Pattern cs
/P119 scn
2.029469 -0.000001 m
1.770387 0.442612 1.439339 0.885226 1.252225 1.431116 c
1.237832 1.519638 1.108291 1.549145 1.108291 1.637668 c
0.993144 1.977005 0.877996 2.213065 0.849209 2.567156 c
0.834816 2.744201 0.690883 2.847477 0.676489 3.024523 c
0.647702 3.363859 0.575735 3.658935 0.532555 3.998272 c
0.359834 3.983518 0.158327 3.909749 0.000000 3.894995 c
0.187114 2.404864 1.079504 1.121286 2.029469 -0.000001 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.415527 7.554264 cm
/Pattern cs
/P120 scn
0.230295 3.467139 m
0.158328 3.452385 0.071967 3.437632 0.000000 3.422878 c
0.187115 2.080284 0.935573 0.914735 1.669638 0.000001 c
1.482523 0.295077 1.295409 0.619661 1.180262 0.973751 c
1.180262 1.003259 1.151475 1.018012 1.122688 1.047520 c
1.079508 1.077027 1.036328 1.121289 1.036328 1.180304 c
1.036328 1.165550 l
0.978754 1.327842 l
0.878000 1.578656 0.806032 1.814716 0.777245 2.095038 c
0.762852 2.168807 0.734065 2.242576 0.690885 2.301591 c
0.647705 2.375360 0.604525 2.449129 0.604525 2.552405 c
0.590131 2.729450 0.561344 2.876988 0.532558 3.039279 c
0.503771 3.186817 0.489377 3.334355 0.460590 3.496647 c
0.388623 3.496647 0.302262 3.481893 0.230295 3.467139 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.356934 13.529533 cm
/Pattern cs
/P121 scn
0.000000 4.013031 m
0.877999 2.803221 1.396162 1.431119 1.799178 0.000002 c
1.914325 0.059017 2.173407 0.000002 2.202193 0.132786 c
2.015079 1.711441 1.122687 3.009774 0.000000 4.013031 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.630371 13.588531 cm
/Pattern cs
/P122 scn
1.554490 0.000003 m
1.597670 0.014757 1.655244 0.014757 1.698424 0.014757 c
1.799178 0.029511 1.885539 0.029511 1.899932 0.073772 c
1.741604 1.357351 1.093900 2.552407 0.000000 3.629433 c
0.633310 2.670437 1.122687 1.534396 1.554490 0.000003 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.256348 7.185410 cm
/Pattern cs
/P123 scn
0.000000 -0.000000 m
0.230295 1.460624 0.719671 2.936002 1.669637 4.027782 c
1.525702 4.145812 1.396163 4.263843 1.252228 4.367119 c
0.359836 3.068786 0.143934 1.534393 0.000000 -0.000000 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.385742 8.070614 cm
/Pattern cs
/P124 scn
0.000000 0.000001 m
0.302262 1.298334 0.806031 2.345853 1.468128 3.142558 c
1.424948 3.186819 1.180261 3.393372 1.122687 3.437634 c
0.431803 2.375361 0.158328 1.180304 0.000000 0.000001 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.048828 13.160690 cm
/Pattern cs
/P125 scn
1.496915 4.440887 m
1.424948 4.263842 1.453734 4.086797 1.468128 3.924505 c
1.295407 2.744203 0.834818 1.785207 0.302261 0.722934 c
0.187114 0.575397 0.115147 0.486874 0.000000 0.339336 c
0.172721 0.265567 0.316655 0.162291 0.417409 -0.000001 c
1.122687 1.372101 1.684030 2.847479 1.496915 4.440887 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.106445 13.234451 cm
/Pattern cs
/P126 scn
0.273475 0.619663 m
0.273475 0.619663 0.057574 0.339341 0.000000 0.280326 c
0.143934 0.221311 0.259082 0.118034 0.345443 0.000004 c
0.863606 1.018015 1.424950 2.331101 1.424950 3.732710 c
1.424950 3.747464 1.424950 3.762218 1.424950 3.791725 c
1.252228 2.626177 0.820426 1.711442 0.273475 0.619663 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.322266 10.121433 cm
/Pattern cs
/P127 scn
4.188486 0.029506 m
4.015765 0.014753 3.857438 -0.000001 3.727897 0.029506 c
2.504456 0.427858 1.324195 0.855718 0.302262 1.711437 c
0.187114 1.563900 0.115147 1.475376 0.000000 1.327839 c
0.446196 0.722934 1.223440 0.545889 1.914325 0.354090 c
2.662783 0.132783 3.396848 -0.000001 4.188486 0.029506 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.379883 10.224674 cm
/Pattern cs
/P128 scn
0.000000 1.224565 m
0.403016 0.693429 1.093899 0.501630 1.755996 0.324584 c
1.871144 0.295077 l
2.389307 0.132785 2.849896 0.044262 3.310486 0.000001 c
2.274160 0.339338 1.194653 0.767198 0.259081 1.549149 c
0.230294 1.504887 0.043180 1.268826 0.000000 1.224565 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.363281 12.939400 cm
/Pattern cs
/P129 scn
0.000000 1.608162 m
0.129541 1.578654 0.215901 1.504885 0.345442 1.475378 c
1.755997 1.313086 2.907470 0.752442 4.001369 -0.000001 c
4.030156 0.132783 4.274843 0.250814 4.274843 0.250814 c
3.296091 1.608162 1.496915 1.460624 0.000000 1.608162 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.622070 12.998383 cm
/Pattern cs
/P130 scn
0.100754 1.460628 m
1.338588 1.327843 2.461275 0.870476 3.727896 0.000002 c
3.771076 0.088525 3.886225 0.162294 3.958192 0.191802 c
3.152160 1.283582 1.799178 1.372105 0.503770 1.445874 c
0.503770 1.445874 0.230295 1.460628 0.000000 1.490135 c
0.028787 1.475381 0.071967 1.460628 0.100754 1.460628 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.233398 13.106995 cm
/Pattern cs
/P131 scn
0.000000 0.997967 m
0.705278 1.499595 1.612063 1.779917 2.518848 1.647133 c
3.411240 1.529102 4.303632 1.101243 4.605894 0.216017 c
4.764221 0.319293 4.879368 0.378308 5.037696 0.481585 c
4.721041 1.145504 4.174091 1.514349 3.511994 1.750409 c
2.346127 2.104500 0.993146 1.750409 0.000000 0.997967 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.413574 13.291641 cm
/Pattern cs
/P132 scn
0.000000 1.403485 m
0.446196 1.521515 0.906785 1.565777 1.352981 1.506762 c
2.418094 1.359224 3.166553 0.842842 3.454421 0.090399 c
3.511995 0.119906 3.771077 0.282198 3.814257 0.311706 c
3.526388 0.872349 3.051405 1.270701 2.331734 1.521515 c
1.597669 1.757576 0.777245 1.698561 0.000000 1.403485 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.702637 9.392006 cm
/Pattern cs
/P133 scn
4.908159 1.083530 m
4.346816 0.758947 3.727898 0.567148 3.108981 0.552395 c
2.000686 0.611410 1.065114 1.068776 0.244689 1.762204 c
0.201509 1.806465 0.086361 1.658927 0.000000 1.644173 c
1.079507 0.036012 3.396849 0.139289 4.908159 1.083530 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 15.760254 9.634560 cm
/Pattern cs
/P134 scn
0.086360 1.431119 m
0.057574 1.416365 0.028787 1.401611 0.000000 1.386858 c
0.777246 0.280324 2.144622 0.000002 3.425638 0.295077 c
3.296097 0.280323 3.166557 0.265570 3.037016 0.250816 c
2.015082 0.309831 1.065114 0.708183 0.143934 1.475380 c
0.143934 1.475380 0.115147 1.460626 0.086360 1.431119 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 12.938965 7.096912 cm
/Pattern cs
/P135 scn
0.705887 0.000000 m
-0.200898 1.460624 -0.085751 3.732706 1.511919 4.588426 c
1.411165 4.750717 1.267231 4.868747 1.296018 5.090054 c
-0.244079 3.939259 -0.373619 1.534393 0.705887 0.000000 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 12.982422 8.336212 cm
/Pattern cs
/P136 scn
0.000000 1.032765 m
0.000000 0.693429 0.043180 0.339338 0.143934 0.000001 c
0.086361 0.265569 0.057574 0.531137 0.057574 0.796705 c
0.057574 1.106534 0.100755 1.401610 0.172722 1.696686 c
0.374230 2.449128 0.806032 3.024526 1.424950 3.363863 c
1.396163 3.393370 1.381770 3.437631 1.381770 3.437631 c
1.309803 3.526154 1.252229 3.629431 1.237836 3.762215 c
0.417410 3.127802 0.000000 2.095037 0.000000 1.032765 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.552246 12.511551 cm
/Pattern cs
/P137 scn
0.604522 5.178574 m
0.791636 4.942513 1.036324 4.662191 1.065111 4.322854 c
1.079504 3.762211 1.295405 3.260582 1.223438 2.699939 c
1.050717 1.814712 0.762850 0.958992 0.000000 0.501625 c
0.143934 0.383595 0.201508 0.177042 0.129541 -0.000004 c
1.079504 0.619655 1.511306 1.829465 1.439339 2.995014 c
1.324192 3.776965 1.122684 4.499900 0.604522 5.178574 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.624023 12.585312 cm
/Pattern cs
/P138 scn
1.122686 3.570417 m
1.165866 3.334357 1.209046 3.098297 1.209046 2.847482 c
1.194652 2.611422 l
1.050719 1.844225 0.791637 0.914737 0.000000 0.413109 c
0.086360 0.324586 0.143934 0.191802 0.143934 0.059018 c
0.143934 0.044264 0.129541 0.014757 0.129541 0.000003 c
0.892391 0.545893 1.352980 1.519642 1.352980 2.640929 c
1.338586 2.891744 l
1.266619 3.363864 1.180259 3.747463 1.050719 4.086800 c
1.065112 3.909754 1.093899 3.732709 1.122686 3.570417 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.478027 9.531746 cm
/Pattern cs
/P139 scn
0.000000 0.442148 m
0.474983 2.094571 2.101438 3.555195 3.871829 3.186350 c
3.857435 3.363396 4.058944 3.422411 4.044550 3.599456 c
2.087045 4.130592 0.460589 2.183093 0.000000 0.442148 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 11.140137 11.072990 cm
/Pattern cs
/P140 scn
0.000000 0.287767 m
0.748458 1.261516 1.914325 1.940189 3.166552 1.689375 c
3.180946 1.763144 3.224126 1.822159 3.252913 1.866421 c
3.296093 1.910682 3.324880 1.954943 3.324880 2.013958 c
1.914325 2.382802 0.719671 1.438561 0.000000 0.287767 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.508789 11.478775 cm
/Pattern cs
/P141 scn
3.871832 3.422874 m
3.540783 1.740944 1.914326 0.191797 0.187115 0.619657 c
0.215902 0.368843 0.057574 0.177043 0.000000 -0.000002 c
0.417409 0.044260 0.791639 0.044260 1.252228 0.132782 c
1.741605 0.265566 2.216587 0.575395 2.518849 0.958994 c
3.209733 1.622914 3.713504 2.463879 3.871832 3.422874 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 16.566406 11.508297 cm
/Pattern cs
/P142 scn
2.216586 0.944243 m
1.568883 0.516384 0.863606 0.383599 0.172722 0.531137 c
0.172722 0.531137 0.172722 0.531137 0.172722 0.516383 c
0.172722 0.354092 0.100754 0.206554 0.043181 0.088523 c
0.043181 0.088523 0.028787 0.044262 0.000000 0.000001 c
0.100754 0.014755 0.345442 0.029509 0.345442 0.029509 c
0.604524 0.044262 0.877999 0.073770 1.180261 0.132785 c
1.669637 0.265569 2.130226 0.575399 2.432487 0.944243 c
2.763536 1.268826 3.037012 1.608163 3.238520 1.962254 c
2.965045 1.563902 2.605209 1.209811 2.216586 0.944243 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 14.624512 7.273949 cm
/Pattern cs
/P143 scn
3.223100 0.000000 m
2.100414 0.309830 1.092875 1.077026 0.632286 2.242574 c
0.502745 2.744202 0.445172 3.260584 0.560319 3.791720 c
0.315631 3.762213 0.157304 3.968765 0.027763 4.086796 c
0.042157 3.998273 0.042156 3.909750 0.056550 3.835982 c
-0.058598 3.304846 -0.001024 2.699941 0.258057 2.257328 c
0.905761 1.150794 1.985266 0.177046 3.223100 0.000000 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 14.666504 7.642807 cm
/Pattern cs
/P144 scn
0.043180 3.599924 m
0.057574 3.467139 l
0.014394 3.290094 0.000000 3.113049 0.000000 2.936003 c
0.000000 2.567159 0.086360 2.198314 0.244688 1.903239 c
0.762851 1.032765 1.453736 0.383599 2.202194 0.000000 c
1.439342 0.427860 0.863605 1.077027 0.546950 1.858977 c
0.460589 2.198314 0.417410 2.522898 0.417410 2.817973 c
0.417410 3.009773 0.431802 3.201572 0.474983 3.378617 c
0.287868 3.378617 0.143934 3.511401 0.043180 3.614677 c
0.043180 3.614677 0.043180 3.599924 0.043180 3.599924 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.040039 13.382011 cm
/Pattern cs
/P145 scn
0.000000 4.042534 m
1.640850 3.614674 2.979439 2.109789 2.835505 0.191798 c
2.849899 0.103275 2.979439 0.073768 3.065800 -0.000001 c
3.425635 0.649165 3.267308 1.401608 2.907472 2.021266 c
2.245375 3.113046 1.137080 3.644182 0.000000 4.042534 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 14.508301 13.426285 cm
/Pattern cs
/P146 scn
1.410555 0.427858 m
1.396161 0.132782 l
1.396161 0.103274 1.439341 0.073766 1.496915 0.044259 c
1.496915 0.044259 1.540095 0.014751 1.568882 -0.000002 c
1.684029 0.221304 1.741604 0.472119 1.741604 0.737687 c
1.741604 1.121285 1.612063 1.534391 1.381768 1.932743 c
1.065113 2.463879 0.618917 2.906493 0.000000 3.275337 c
0.906786 2.581910 1.410555 1.563899 1.410555 0.427858 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 12.867676 9.649376 cm
/Pattern cs
/P147 scn
5.239202 2.685188 m
5.239202 1.195056 4.058942 0.000000 2.619601 0.000000 c
1.165866 0.000000 0.000000 1.209810 0.000000 2.685188 c
0.000000 4.175320 1.180259 5.370377 2.619601 5.370377 c
4.073336 5.370377 5.239202 4.175320 5.239202 2.685188 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.759766 10.062454 cm
/Pattern cs
/P148 scn
0.000000 0.958996 m
0.374229 0.383599 1.007540 0.000001 1.727211 0.000001 c
2.418096 0.000001 3.022620 0.339337 3.396849 0.870473 c
2.965046 0.486875 2.389309 0.265568 1.741605 0.265568 c
1.050720 0.265568 0.431803 0.531136 0.000000 0.958996 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 13.875000 12.688637 cm
/Pattern cs
/P149 scn
3.224127 0.885227 m
3.224127 0.398353 2.504455 0.000000 1.612063 0.000000 c
0.719671 0.000000 0.000000 0.398353 0.000000 0.885227 c
0.000000 1.372102 0.719671 1.770454 1.612063 1.770454 c
2.504455 1.770454 3.224127 1.386856 3.224127 0.885227 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 3.954418 cm
/Pattern cs
/P150 scn
15.746404 7.126075 m
15.760798 7.214598 15.760798 7.317874 15.760798 7.406397 c
15.760798 9.427665 14.105554 11.065334 12.061688 11.065334 c
10.392051 11.065334 8.981496 9.973555 8.520905 8.483423 c
7.988349 8.881775 7.297465 9.117835 6.563400 9.117835 c
4.864976 9.117835 3.483208 7.863764 3.483208 6.329371 c
3.483208 6.196587 3.497602 6.063803 3.511995 5.931019 c
1.482522 5.606436 0.000000 4.470395 0.000000 3.113048 c
0.000000 1.504886 2.115833 0.191799 4.721042 0.191799 c
5.642221 0.191799 6.491433 0.354091 7.211104 0.634413 c
7.988349 0.265568 8.952709 0.059013 9.989035 0.059013 c
10.982182 0.059013 11.903360 0.250813 12.666211 0.590151 c
13.342702 0.206553 14.163127 -0.000001 15.041126 -0.000001 c
17.416040 -0.000001 19.330366 1.608161 19.330366 3.599921 c
19.330366 5.370375 17.775877 6.845753 15.746404 7.126075 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.806152 4.529819 cm
/Pattern cs
/P151 scn
8.017135 7.671967 m
7.901987 7.317875 l
7.599726 7.539182 l
7.124743 7.893273 6.520219 8.085073 5.901302 8.085073 c
4.447567 8.085073 3.252913 7.022800 3.252913 5.724467 c
3.252913 5.621191 3.267306 5.503161 3.281699 5.385130 c
3.324880 5.119563 l
3.080192 5.075301 l
1.266621 4.780225 0.000000 3.791723 0.000000 2.670435 c
-0.000000 1.313087 1.871145 0.191800 4.188485 0.191800 c
4.994516 0.191800 5.771761 0.324583 6.448252 0.590152 c
6.549006 0.634414 l
6.649760 0.590152 l
7.383824 0.250814 8.247430 0.073770 9.168609 0.073770 c
10.046607 0.073770 10.881425 0.236061 11.586702 0.545891 c
11.701850 0.590152 l
11.816997 0.531137 l
12.435914 0.177047 13.169979 0.000000 13.932830 0.000000 c
16.019876 0.000000 17.718298 1.401610 17.718298 3.127802 c
17.718298 4.662195 16.394104 5.945774 14.566141 6.211342 c
14.321452 6.240849 l
14.350240 6.742478 l
14.350240 8.498178 12.896504 9.929295 11.111720 9.929295 c
9.686771 9.929295 8.434544 9.014561 8.017135 7.671967 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 10.017578 5.798668 cm
1.000000 1.000000 1.000000 scn
8.017135 1.962251 m
8.017135 3.201569 6.894447 4.263841 5.339958 4.470394 c
4.591501 4.573670 l
4.591501 4.573670 4.634682 5.547420 4.634682 5.576927 c
4.634682 7.022798 3.440027 8.188347 1.957505 8.188347 c
1.194654 8.188347 0.503770 7.878518 0.000000 7.362135 c
0.417409 7.627703 0.921179 7.789995 1.453735 7.789995 c
2.921864 7.789995 4.130912 6.624446 4.130912 5.178576 c
4.130912 5.149068 4.087731 4.175318 4.087731 4.175318 c
4.836189 4.072042 l
6.390678 3.850736 7.513365 2.803217 7.513365 1.563900 c
7.513365 0.973748 7.254283 0.442612 6.836874 -0.000001 c
7.556545 0.472120 8.017135 1.180301 8.017135 1.962251 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.000000 6.890438 cm
/Pattern cs
/P152 scn
10.204935 4.617935 m
10.204935 4.676950 10.219329 4.735965 10.219329 4.809734 c
10.219329 6.122821 9.139822 7.185093 7.815627 7.185093 c
6.736121 7.185093 5.829336 6.476912 5.527074 5.503162 c
5.181632 5.768730 4.735435 5.916267 4.260453 5.916267 c
3.152159 5.916267 2.259767 5.104810 2.259767 4.116306 c
2.259767 4.027783 2.274160 3.939261 2.274160 3.850738 c
0.964359 3.644185 0.000000 2.906497 0.000000 2.021269 c
0.000000 0.973751 1.367375 0.132785 3.051405 0.132785 c
3.641536 0.132785 4.202879 0.236062 4.663468 0.413107 c
5.181632 0.177047 5.800549 0.044262 6.477039 0.044262 c
7.124743 0.044262 7.714873 0.177047 8.204249 0.383600 c
8.650446 0.132786 9.168609 0.000001 9.744346 0.000001 c
11.284441 0.000001 12.522276 1.047520 12.522276 2.331099 c
12.522276 3.481894 11.514737 4.440889 10.204935 4.617935 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 0.518066 7.274048 cm
/Pattern cs
/P153 scn
5.210418 4.957269 m
5.138451 4.721208 l
4.951337 4.868746 l
4.649075 5.104806 4.246059 5.222836 3.857437 5.222836 c
2.907471 5.222836 2.144620 4.529408 2.144620 3.688443 c
2.144620 3.614674 2.144620 3.540905 2.159013 3.467136 c
2.187800 3.290091 l
2.015079 3.260584 l
0.820425 3.083539 0.000000 2.449126 0.000000 1.726191 c
0.000000 0.840964 1.223441 0.118028 2.720356 0.118028 c
3.238519 0.118028 3.742289 0.206552 4.188486 0.383597 c
4.260453 0.413104 l
4.318026 0.383597 l
4.793009 0.162290 5.354353 0.044260 5.944483 0.044260 c
6.505826 0.044260 7.052776 0.147536 7.513366 0.354089 c
7.585333 0.383597 l
7.657300 0.339335 l
8.060315 0.118028 8.535299 -0.000001 9.024675 -0.000001 c
10.377657 -0.000001 11.485950 0.914733 11.485950 2.021266 c
11.485950 3.009769 10.622344 3.850735 9.442083 4.013026 c
9.283756 4.027780 l
9.298149 4.352364 l
9.298149 5.488404 8.362577 6.417892 7.211104 6.417892 c
6.275532 6.417892 5.469500 5.827742 5.210418 4.957269 c
h
f
n
Q
q
1.000000 0.000000 -0.000000 1.000000 6.520020 8.085506 cm
1.000000 1.000000 1.000000 scn
5.167238 1.268826 m
5.167238 2.065529 4.433174 2.758957 3.440027 2.891741 c
2.965045 2.965509 l
2.965045 2.965509 2.993832 3.599921 2.993832 3.614675 c
2.993832 4.544163 2.216587 5.311359 1.266621 5.311359 c
0.777245 5.311359 0.316655 5.104807 0.000000 4.780224 c
0.273475 4.957269 0.604524 5.045792 0.949966 5.045792 c
1.899932 5.045792 2.677177 4.293349 2.677177 3.349107 c
2.677177 3.319600 2.648390 2.699941 2.648390 2.699941 c
3.123373 2.626172 l
4.130912 2.493388 4.850584 1.799961 4.850584 1.003257 c
4.850584 0.619659 4.692255 0.280323 4.418781 0.000001 c
4.864977 0.309830 5.167238 0.767197 5.167238 1.268826 c
h
f
n
Q

endstream
endobj

309 0 obj
  72525
endobj

310 0 obj
  << /Annots []
     /Type /Page
     /MediaBox [ 0.000000 0.000000 21.000000 18.000000 ]
     /Resources 307 0 R
     /Contents 308 0 R
     /Parent 311 0 R
  >>
endobj

311 0 obj
  << /Kids [ 310 0 R ]
     /Count 1
     /Type /Pages
  >>
endobj

312 0 obj
  << /Pages 311 0 R
     /Type /Catalog
  >>
endobj

xref
0 313
0000000000 65535 f
0000000010 00000 n
0000000728 00000 n
0000000750 00000 n
0000001468 00000 n
0000001490 00000 n
0000002980 00000 n
0000003003 00000 n
0000004113 00000 n
0000004135 00000 n
0000006601 00000 n
0000006625 00000 n
0000008703 00000 n
0000008727 00000 n
0000011194 00000 n
0000011218 00000 n
0000013685 00000 n
0000013709 00000 n
0000016176 00000 n
0000016200 00000 n
0000018278 00000 n
0000018302 00000 n
0000020769 00000 n
0000020793 00000 n
0000022871 00000 n
0000022895 00000 n
0000025362 00000 n
0000025386 00000 n
0000027853 00000 n
0000027877 00000 n
0000029955 00000 n
0000029979 00000 n
0000032446 00000 n
0000032470 00000 n
0000034937 00000 n
0000034961 00000 n
0000037428 00000 n
0000037452 00000 n
0000039530 00000 n
0000039554 00000 n
0000042021 00000 n
0000042045 00000 n
0000044123 00000 n
0000044147 00000 n
0000046614 00000 n
0000046638 00000 n
0000049105 00000 n
0000049129 00000 n
0000051596 00000 n
0000051620 00000 n
0000053698 00000 n
0000053722 00000 n
0000055800 00000 n
0000055824 00000 n
0000056540 00000 n
0000056563 00000 n
0000058641 00000 n
0000058665 00000 n
0000060743 00000 n
0000060767 00000 n
0000063234 00000 n
0000063258 00000 n
0000065725 00000 n
0000065749 00000 n
0000067827 00000 n
0000067851 00000 n
0000069929 00000 n
0000069953 00000 n
0000072031 00000 n
0000072055 00000 n
0000072771 00000 n
0000072794 00000 n
0000075261 00000 n
0000075285 00000 n
0000077363 00000 n
0000077387 00000 n
0000078103 00000 n
0000078126 00000 n
0000080204 00000 n
0000080228 00000 n
0000082306 00000 n
0000082330 00000 n
0000084797 00000 n
0000084821 00000 n
0000086899 00000 n
0000086923 00000 n
0000089390 00000 n
0000089414 00000 n
0000091492 00000 n
0000091516 00000 n
0000093594 00000 n
0000093618 00000 n
0000096085 00000 n
0000096109 00000 n
0000098187 00000 n
0000098211 00000 n
0000100678 00000 n
0000100702 00000 n
0000102780 00000 n
0000102804 00000 n
0000103521 00000 n
0000103545 00000 n
0000106014 00000 n
0000106039 00000 n
0000108508 00000 n
0000108533 00000 n
0000111002 00000 n
0000111027 00000 n
0000113496 00000 n
0000113521 00000 n
0000115601 00000 n
0000115626 00000 n
0000117706 00000 n
0000117731 00000 n
0000118449 00000 n
0000118473 00000 n
0000120942 00000 n
0000120967 00000 n
0000123047 00000 n
0000123072 00000 n
0000125152 00000 n
0000125177 00000 n
0000127257 00000 n
0000127282 00000 n
0000129362 00000 n
0000129387 00000 n
0000131856 00000 n
0000131881 00000 n
0000134350 00000 n
0000134375 00000 n
0000136844 00000 n
0000136869 00000 n
0000138949 00000 n
0000138974 00000 n
0000141054 00000 n
0000141079 00000 n
0000143159 00000 n
0000143184 00000 n
0000145653 00000 n
0000145678 00000 n
0000148147 00000 n
0000148172 00000 n
0000150252 00000 n
0000150277 00000 n
0000152357 00000 n
0000152382 00000 n
0000154462 00000 n
0000154487 00000 n
0000156567 00000 n
0000156592 00000 n
0000159061 00000 n
0000159086 00000 n
0000159804 00000 n
0000159828 00000 n
0000160546 00000 n
0000160570 00000 n
0000161288 00000 n
0000161312 00000 n
0000162030 00000 n
0000162054 00000 n
0000162772 00000 n
0000162796 00000 n
0000165265 00000 n
0000165290 00000 n
0000166008 00000 n
0000166032 00000 n
0000168112 00000 n
0000168137 00000 n
0000168855 00000 n
0000168879 00000 n
0000171348 00000 n
0000171373 00000 n
0000173453 00000 n
0000173478 00000 n
0000174196 00000 n
0000174220 00000 n
0000176300 00000 n
0000176325 00000 n
0000178405 00000 n
0000178430 00000 n
0000179148 00000 n
0000179172 00000 n
0000181641 00000 n
0000181666 00000 n
0000182384 00000 n
0000182408 00000 n
0000184877 00000 n
0000184902 00000 n
0000186982 00000 n
0000187007 00000 n
0000189087 00000 n
0000189112 00000 n
0000191192 00000 n
0000191217 00000 n
0000191935 00000 n
0000191959 00000 n
0000192677 00000 n
0000192701 00000 n
0000193419 00000 n
0000193443 00000 n
0000195523 00000 n
0000195548 00000 n
0000196266 00000 n
0000196290 00000 n
0000198370 00000 n
0000198395 00000 n
0000200864 00000 n
0000200889 00000 n
0000201607 00000 n
0000201631 00000 n
0000202349 00000 n
0000202373 00000 n
0000204453 00000 n
0000204478 00000 n
0000205196 00000 n
0000205220 00000 n
0000207689 00000 n
0000207714 00000 n
0000208432 00000 n
0000208456 00000 n
0000209174 00000 n
0000209198 00000 n
0000209916 00000 n
0000209940 00000 n
0000210658 00000 n
0000210682 00000 n
0000213151 00000 n
0000213176 00000 n
0000213894 00000 n
0000213918 00000 n
0000214636 00000 n
0000214660 00000 n
0000215378 00000 n
0000215402 00000 n
0000216120 00000 n
0000216144 00000 n
0000216862 00000 n
0000216886 00000 n
0000217604 00000 n
0000217628 00000 n
0000219510 00000 n
0000219535 00000 n
0000220257 00000 n
0000220281 00000 n
0000222750 00000 n
0000222775 00000 n
0000225244 00000 n
0000225269 00000 n
0000227349 00000 n
0000227374 00000 n
0000228879 00000 n
0000228904 00000 n
0000229622 00000 n
0000229646 00000 n
0000230364 00000 n
0000230388 00000 n
0000232468 00000 n
0000232493 00000 n
0000234573 00000 n
0000234598 00000 n
0000235316 00000 n
0000235340 00000 n
0000236058 00000 n
0000236082 00000 n
0000236800 00000 n
0000236824 00000 n
0000239293 00000 n
0000239318 00000 n
0000240036 00000 n
0000240060 00000 n
0000240778 00000 n
0000240802 00000 n
0000242882 00000 n
0000242907 00000 n
0000243625 00000 n
0000243649 00000 n
0000244367 00000 n
0000244391 00000 n
0000245109 00000 n
0000245133 00000 n
0000245855 00000 n
0000245879 00000 n
0000248348 00000 n
0000248373 00000 n
0000249091 00000 n
0000249115 00000 n
0000249833 00000 n
0000249857 00000 n
0000250575 00000 n
0000250599 00000 n
0000253068 00000 n
0000253093 00000 n
0000255562 00000 n
0000255587 00000 n
0000258056 00000 n
0000258081 00000 n
0000260550 00000 n
0000260575 00000 n
0000261293 00000 n
0000261317 00000 n
0000262035 00000 n
0000262059 00000 n
0000264528 00000 n
0000264553 00000 n
0000265271 00000 n
0000265295 00000 n
0000266013 00000 n
0000266037 00000 n
0000363191 00000 n
0000435776 00000 n
0000435802 00000 n
0000435983 00000 n
0000436061 00000 n
trailer
<< /ID [ (some) (id) ]
   /Root 312 0 R
   /Size 313
>>
startxref
436124
%%EOF